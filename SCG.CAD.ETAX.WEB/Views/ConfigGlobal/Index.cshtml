@{
    ViewData["Title"] = " ConfigGlobal ";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ConfigGlobal/_Search.cshtml")

<div class="divider">
</div>

@await Html.PartialAsync("~/Views/ConfigGlobal/_Content.cshtml")



<script type="text/javascript">

     $(document).ready(function () {

        $('#ConfigGlobalSearchCategory').select2();
        fnDropdownConfigGlobalSearchCategory();
        RenderConfigGlobal();

    });

    $(window).on('load', function() {

        $('#modalCreateConfigGlobal').select2({
            dropdownParent: $('#modalCreateConfigGlobal')
        });


        $('#modalUpdateConfigGlobal').select2({
            dropdownParent: $('#modalUpdateConfigGlobal')
        });

    });

    function fnDropdownConfigGlobalSearchCategory(){
        $.getJSON("@Url.Action("DropDownList", "ConfigGlobalCategory")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.configGlobalCategoryName,
                        text: data.configGlobalCategoryName
                    }).html(data.configGlobalCategoryName).appendTo("#ConfigGlobalSearchCategory");
            });
        })
    }

    function fnDropdownConfigGlobalCategoryCode() {

        $('<option>',
        {
            value: 0,
        }).html("--- Select category ---").appendTo("#ddlInsertConfigGlobalCategory");

        $.getJSON("@Url.Action("DropDownList", "ConfigGlobalCategory")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.configGlobalCategoryName,
                        text: data.configGlobalCategoryName
                    }).html(data.configGlobalCategoryName).appendTo("#ddlInsertConfigGlobalCategory");
            });
        })

        $.getJSON("@Url.Action("DropDownList", "ConfigGlobalCategory")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.configGlobalCategoryName,
                        text: data.configGlobalCategoryName
                    }).html(data.configGlobalCategoryName).appendTo("#ddlUpdateConfigGlobalCategory");
            });
        })

        
    }



    function RenderConfigGlobal(){

        var table = $("#tbConfigGlobalMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ConfigGlobal")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "configGlobalNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "configGlobalCategoryName",
                    width: "10%"
                },
                {
                    data: "configGlobalName",
                    width: "10%"
                },
                {
                    data: "configGlobalValue",
                    width: "10%"
                },
                {
                    data: "configGlobalDescription",
                    width: "10%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center text-center text-primary",
                   // defaultContent: '<i class="pointer fas fa-pen"/>',
                    createdCell: function (td, cellData, rowData, row, col) {
                      if ('@ViewBag.showUPDATE'.toUpperCase() == 'TRUE') {
                        $(td).addClass('editor-edit');
                      }
                    },
                    render: function (data, type, row) {
                        if ('@ViewBag.showUPDATE'.toUpperCase() == 'TRUE'){
                            return '<i class="pointer fas fa-pen"/>';
                        }
                        return '';
                    },
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();

        $('#ConfigGlobalSearchCategory').on( 'change', function () {
            var valueCategory = $('#ConfigGlobalSearchCategory').val();

            if(valueCategory.includes('All')){
                table.columns(2).search('').draw();
            }else{
                    table.column(2).search(this.value).draw();
            }
        } );

        $('#ConfigGlobalSearchName').on('keyup', function () {
            
            table.column(3).search(this.value).draw();

        } );


        EditConfigGlobal(table);
        DeleteConfigGlobal(table);
    }

    function fnInsertCancelConfigGlobal(){
        $("#ddlInsertConfigGlobalCategory").empty();
        $("#modalCreateConfigGlobal").modal('hide');
    }

    function fnUpdateCancelConfigGlobal(){
        $("#ddlUpdateConfigGlobalCategory").empty();
        $("#modalUpdateConfigGlobal").modal('hide');
    }

    function callModalInsertConfigGlobal(){

        $("#ddlInsertConfigGlobalCategory").empty();
        fnDropdownConfigGlobalCategoryCode();
        $("#modalCreateConfigGlobal").modal('show');
    }

    function fnInsertConfigGlobal(){

        if (    $('#txtInsertConfigGlobalName').val() != '' && 
                $('#txtInsertConfigGlobalValue').val() != '' &&
                $('#ddlInsertConfigGlobalCategory').val() != '0' 
            )
        {
            callConfigGlobalInsertController();
        }
        else {
            fnToastrInputDataFail();
            validateInsertConfigGlobal();
        }

    }

    function fnUpdateConfigGlobal(){

        if (    $('#txtUpdateConfigGlobalName').val() != '' && 
                $('#txtUpdateConfigGlobalValue').val() != '' &&
                $('#ddlUpdateConfigGlobalCategory').val() != '' 
            )
        {
            callConfigGlobalUpdateController();
        }
        else {
            fnToastrInputDataFail();
            validateUpdateConfigGlobal();
        }
    }

    function EditConfigGlobal(table){

        $('#tbConfigGlobalMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callConfigGlobalGetDetailController(getPK);

        });
    }

    function ExportConfigGlobal(){

        $.blockUI();

        callConfigGlobalExportController();

        $.unblockUI();
    }



    // [Begin] Ajax call Controller

    function callConfigGlobalGetDetailController(getPK){

        $("#ddlUpdateConfigGlobalCategory").empty();

        fnDropdownConfigGlobalCategoryCode();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigGlobal")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateConfigGlobalNo').value = data.ConfigGlobalNo;
                document.getElementById('txtUpdateConfigGlobalName').value = data.ConfigGlobalName;
                document.getElementById('txtUpdateConfigGlobalValue').value = data.ConfigGlobalValue;
                document.getElementById('txtUpdateConfigGlobalDescription').value = data.ConfigGlobalDescription;

                document.getElementById('ddlUpdateConfigGlobalCategory').value = data.ConfigGlobalCategoryName;

                //$('#ddlUpdateConfigGlobalCategory').val(data.configGlobalCategoryName);

                //$('#ddlUpdateConfigGlobalCategory').select2(data.configGlobalCategoryName);
                //$('#ddlUpdateConfigGlobalCategory').find(':selected');

                //$('#ddlUpdateConfigGlobalCategory').val(data.configGlobalCategoryName).trigger('change');


                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateConfigGlobal").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateConfigGlobal").checked = false;
                }

                $("#modalUpdateConfigGlobal").modal('show');
            }
        });
    }

    function callConfigGlobalInsertController(){

        var IsActive = 1;

        var IsActive = ($('#toggleInsertConfigGlobal').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.configGlobalCategoryName = $('#ddlInsertConfigGlobalCategory').val();
        model.configGlobalName = $('#txtInsertConfigGlobalName').val();
        model.configGlobalValue = $('#txtInsertConfigGlobalValue').val();;
        model.configGlobalDescription = $('#txtInsertConfigGlobalDescription').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ConfigGlobal")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){
                    $("#modalCreateConfigGlobal").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callConfigGlobalIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callConfigGlobalUpdateController(){

        var IsActive = 1;

        var IsActive = ($('#toggleUpdateConfigGlobal').prop('checked')) ? 1 : 0 ;
     
        var model = new Object();

        model.configGlobalNo = $('#txtUpdateConfigGlobalNo').val();
        model.configGlobalCategoryName = $('#ddlUpdateConfigGlobalCategory').val();
        model.configGlobalName = $('#txtUpdateConfigGlobalName').val();
        model.configGlobalValue = $('#txtUpdateConfigGlobalValue').val();;
        model.configGlobalDescription = $('#txtUpdateConfigGlobalDescription').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ConfigGlobal")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){
                    $("#modalUpdateConfigGlobal").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callConfigGlobalIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }


    function callConfigGlobalExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ConfigGlobal")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ConfigGlobal.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }


    function callConfigGlobalIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ConfigGlobal")");
            $.unblockUI();
        }, 500);
    }






</script>