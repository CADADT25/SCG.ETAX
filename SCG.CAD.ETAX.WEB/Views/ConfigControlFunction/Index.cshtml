@{
    ViewData["Title"] = " ConfigControlFunction ";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ConfigControlFunction/_Content.cshtml")



<script type="text/javascript">

     $(document).ready(function () {

        RenderConfigControlFunction();

    });



    function RenderConfigControlFunction(){

        var table = $("#tbConfigControlFunctionMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ConfigControlMenu")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "configControlMenuNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "configControlMenuName",
                    width: "50%"
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditConfigControlFunction(table);
        //DeleteConfigControlFunction(table);
    }

    function fnInsertCancelConfigControlFunction(){

        document.getElementById('txtInsertFunctionName').value = '';

        $("#modalCreateConfigControlFunction").modal('hide');
    }

    function fnUpdateCancelConfigControlFunction(){

        document.getElementById('txtUpdateFunctionName').value = '';
        $("#modalUpdateConfigControlFunction").modal('hide');
    }

    function callModalInsertConfigControlFunction(){

        document.getElementById('txtInsertFunctionName').value = '';
        $("#modalCreateConfigControlFunction").modal('show');
    }

    function fnInsertConfigControlFunction(){

        if ( $('#txtInsertFunctionName').val() != '' )
        {
            callConfigControlFunctionInsertController();
        }
        else {
            fnToastrInputDataFail();
            validateInsertConfigControlFunction();
        }

    }

    function fnUpdateConfigControlFunction(){

         if ( $('#txtUpdateFunctionName').val() != '')

        {
            callConfigControlFunctionUpdateController();
        }
        else {
            fnToastrInputDataFail();
            validateUpdateConfigControlFunction();
        }
    }

    function EditConfigControlFunction(table){

        $('#tbConfigControlFunctionMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callConfigControlFunctionGetDetailController(getPK);

        });
    }


    function callConfigControlFunctionGetDetailController(getPK){

        document.getElementById('txtUpdateFunctionName').value = '';

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigControlFunction")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateFunctionNo').value = data.ConfigControlFunctionNo;
                document.getElementById('txtUpdateFunctionName').value = data.ConfigControlFunctionName;

                $("#modalUpdateConfigControlFunction").modal('show');
            }
        });
    }

    function callConfigControlFunctionInsertController(){

        var model = new Object();

        model.ConfigControlFunctionName = $('#txtInsertFunctionName').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ConfigControlFunction")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalCreateConfigControlFunction").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callConfigControlFunctionIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callConfigControlFunctionUpdateController(){

        var model = new Object();

        model.ConfigControlFunctionNo = $('#txtUpdateFunctionNo').val();
        model.ConfigControlFunctionName = $('#txtUpdateFunctionName').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ConfigControlFunction")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalUpdateConfigControlFunction").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callConfigControlFunctionIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callConfigControlFunctionIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ConfigControlFunction")");
            $.unblockUI();
        }, 500);
    }


</script>