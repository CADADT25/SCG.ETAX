@{
    ViewData["Title"] = "ConfigMftsEmailSetting";
    Layout = null;
}


@await Html.PartialAsync("~/Views/ConfigMftsEmailSetting/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {

        $("#txtConfigMftsEmailSettingOneTime").flatpickr({
            enableTime: true,
            dateFormat: "d-m-Y H:i",
        });


         $("#txtConfigMftsEmailSettingAnyTime").flatpickr({
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i",
        });

        var setCompanyCode = $("#companyCodeState").text();

        setTimeout(function(){
            RenderConfigMftsEmailSetting(setCompanyCode);
        }, 1200);

    });

    $(window).on('load', function() {

        $('#ddlInsertConfigMftsEmailSettingEmailTemplate').select2({
            dropdownParent: $('#ddlInsertConfigMftsEmailSettingEmailTemplate')
        });

    });


    function fnDropdownProfilePartnerEmailTemplate() {

        $('<option>',
        {
            value: 0,
        }).html("--- Select Email Template ---").appendTo("#ddlInsertConfigMftsEmailSettingEmailTemplate");

        $.getJSON("@Url.Action("DropDownList", "ProfileEmailTemplate")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.emailTemplateNo,
                        text: data.emailTemplateName
                    }).html(data.emailTemplateName).appendTo("#ddlInsertConfigMftsEmailSettingEmailTemplate");
            });
        })

        $.getJSON("@Url.Action("DropDownList", "ProfileEmailTemplate")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.emailTemplateNo,
                        text: data.emailTemplateName
                    }).html(data.emailTemplateName).appendTo("#ddlUpdateConfigMftsEmailSettingEmailTemplate");
            });
        })
    }


    function onChangeConfigEmailSmtp(){
        $('#toggleInsertConfigEmailSmtp').prop('checked', true)
        $('#toggleInsertConfigEmailApi').prop('checked', false)


        $('#txtInsertConfigMftsEmailSettingHost').prop('disabled', false)
        $('#txtInsertConfigMftsEmailSettingPort').prop('disabled', false)
        $('#txtInsertConfigMftsEmailSettingUsername').prop('disabled', false)
        $('#txtInsertConfigMftsEmailSettingPassword').prop('disabled', false)


        $('#txtInsertConfigMftsEmailSettingApiKey').prop('disabled', true)
        $('#txtInsertConfigMftsEmailSettingApiKey').val('');
    }

    function onChangeConfigEmailApi(){

        $('#toggleInsertConfigEmailSmtp').prop('checked', false)
        $('#toggleInsertConfigEmailApi').prop('checked', true)

        $('#txtInsertConfigMftsEmailSettingHost').prop('disabled', true)
        $('#txtInsertConfigMftsEmailSettingPort').prop('disabled', true)
        $('#txtInsertConfigMftsEmailSettingUsername').prop('disabled', true)
        $('#txtInsertConfigMftsEmailSettingPassword').prop('disabled', true)

        $('#txtInsertConfigMftsEmailSettingApiKey').prop('disabled', false)

        // ====================
    }



    function RenderConfigMftsEmailSetting(setCompanyCode){

        if(setCompanyCode == null || setCompanyCode == ''){
            setCompanyCode = $("#companyCodeStateUpdate").text();
        }

        var table = $("#tbConfigMftsEmailSettingMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ConfigMftsEmailSetting")",
                type: "POST",
                data: { companyCode : setCompanyCode },
                datatype: "json"
            },


            "columns": [

                {
                    data: "configMftsEmailSettingNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "ConfigMftsEmailSettingNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "configMftsEmailSettingCompanyCode",
                    width: "5%"
                },
                {
                    data: "configMftsEmailSettingEmail",
                    width: "20%"
                },
                {
                    data: "configMftsEmailSettingNo",
                    width: "10%",
                    render: function (data, type, row) {
                        return'<a onclick="callModalInsertConfigMftsEmailSettingOneTime(' + data +')" class="btn btn-primary btn-sm"> One time </a>';
                    }
                },
                {
                    data: "configMftsEmailSettingNo",
                    width: "10%",
                    render: function (data, type, row) {
                        return'<a onclick="callModalInsertConfigMftsEmailSettingAnyTime(' + data +')" class="btn btn-primary btn-sm"> Any Time </a>';
                    }
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    orderable: false,
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/> </i>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();

        EditConfigMftsEmailSetting(table);
        DeleteConfigMftsEmailSetting(table);
    }


    function fnInsertCancelConfigMftsEmailSetting(){

        $("#modalInsertConfigMftsEmailSetting").modal('hide');
    }

    function fnUpdateCancelConfigMftsEmailSetting(){

        $("#modalUpdateConfigMftsEmailSetting").modal('hide');
    }

    function callModalInsertConfigMftsEmailSetting(){

        fnDropdownProfilePartnerEmailTemplate();

        var setCompanyCode = $("#companyCodeStateUpdate").text();

        if(setCompanyCode == null || setCompanyCode == ''){
            setCompanyCode = $("#companyCodeStateUpdate").text();

            if(setCompanyCode == null || setCompanyCode == ''){
                setCompanyCode = $("#companyCodeState").text();
            }
        }

        document.getElementById('txtInsertConfigMftsEmailSettingCompanyCode').value = setCompanyCode;

        $("#modalInsertConfigMftsEmailSetting").modal('show');
    }

     function fnInsertConfigMftsEmailSetting(){

        if ($('#txtInsertConfigMftsEmailSettingCompanyCode').val() != '' && $('#txtInsertConfigMftsEmailSettingEmail').val() != '') {
            callConfigMftsEmailSettingInsertController();
        }
        else {
            validateInsertConfigMftsEmailSetting();

            fnToastrInputDataFail();
        }
    }

    function fnUpdateConfigMftsEmailSetting(){
        if ($('#txtUpdateConfigMftsEmailSettingCompanyCode').val() != '' && $('#txtUpdateConfigMftsEmailSettingEmail').val() != '') {
            callConfigMftsEmailSettingUpdateController();
        }
        else {
            validateUpdateConfigMftsEmailSetting();

            fnToastrInputDataFail();
        }
    }

    function callModalInsertConfigMftsEmailSettingOneTime(getPK){

        $('#appendMftsEmailOneTime').empty();

        $('#txtUpdateConfigMftsEmailSettingOneTimeNo').val(getPK);

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigMftsEmailSetting")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                const myArray = data.ConfigMftsEmailSettingOneTime.split("|");

                var i = 0;

                for (i = 0; i < myArray.length; i++) {
                        $('#appendMftsEmailOneTime').append(
                            "<div class='transaction-item'>"+
                            "<div class='media''>"+
                                "<div class='rounded'>"+
                                    "<div class='avatar-content'>"+
                                        "<i class='fas fa-clock font-medium-3'></i>"+
                                    "</div>"+
                                "</div>"+
                                "<div class='media-body pl-1'>"+
                                    "<h6 class='transaction-title'>"+myArray[i]+"</h6>"+
                                "</div>"+
                            "</div>"+
                            "<div class='font-weight-bolder text-danger btn btn-danger btn-sm'><a onclick='callDeleteConfigMftsEmailOneTime("+ getPK + ","+[i]+")'> Delete </a></div></div>");
                        }
            }
        });

        $("#modalUpdateConfigMftsEmailSettingOneTime").modal('show');
    }

    function callModalInsertConfigMftsEmailSettingAnyTime(getPK){

        $('#appendMftsEmailAnyTime').empty();

        $('#txtUpdateConfigMftsEmailSettingAnyTimeNo').val(getPK);

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigMftsEmailSetting")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                const myArray = data.ConfigMftsEmailSettingAnyTime.split("|");

                var i = 0;

                for (i = 0; i < myArray.length; i++) {
                        $('#appendMftsEmailAnyTime').append(
                            "<div class='transaction-item'>"+
                            "<div class='media''>"+
                                "<div class='rounded'>"+
                                    "<div class='avatar-content'>"+
                                        "<i class='fas fa-clock font-medium-3'></i>"+
                                    "</div>"+
                                "</div>"+
                                "<div class='media-body pl-1'>"+
                                    "<h6 class='transaction-title'>"+myArray[i]+"</h6>"+
                                "</div>"+
                            "</div>"+
                            "<div class='font-weight-bolder text-danger btn btn-danger btn-sm'><a onclick='callDeleteConfigMftsEmailAnyTime("+ getPK + ","+[i]+")'> Delete </a></div></div>");
                        }
            }
        });

        $("#modalUpdateConfigMftsEmailSettingAnyTime").modal('show');
    }

    function fnUpdateCancelConfigMftsEmailSettingOneTime(){
        $("#modalUpdateConfigMftsEmailSettingOneTime").modal('hide');
    }

    function fnUpdateCancelConfigMftsEmailSettingAnyTime(){
        $("#modalUpdateConfigMftsEmailSettingAnyTime").modal('hide');
    }

    function EditConfigMftsEmailSetting(table){

        $('#tbConfigMftsEmailSettingMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callConfigMftsEmailSettingGetDetailController(getPK);
        });
    }

    

    function ExportConfigMftsEmailSetting(){

        $.blockUI();

        callConfigMftsEmailSettingExportController();

        $.unblockUI();
    }

    function callConfigMftsEmailSettingGetDetailController(getPK){

        fnDropdownProfilePartnerEmailTemplate();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigMftsEmailSetting")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateConfigMftsEmailSettingNo').value = data.ConfigMftsEmailSettingNo;

                document.getElementById('txtUpdateConfigMftsEmailSettingCompanyCode').value = data.ConfigMftsEmailSettingCompanyCode;
                document.getElementById('txtUpdateConfigMftsEmailSettingEmail').value = data.ConfigMftsEmailSettingEmail;

                document.getElementById('txtUpdateConfigMftsEmailSettingHost').value = data.ConfigMftsEmailSettingHost;
                document.getElementById('txtUpdateConfigMftsEmailSettingPort').value = data.ConfigMftsEmailSettingPort;
                document.getElementById('txtUpdateConfigMftsEmailSettingUsername').value = data.ConfigMftsEmailSettingUsername;
                document.getElementById('txtUpdateConfigMftsEmailSettingPassword').value = data.ConfigMftsEmailSettingPassword;

                document.getElementById('txtUpdateConfigMftsEmailSettingApiKey').value = data.ConfigMftsEmailSettingApiKey;


                //$('#ddlUpdateConfigMftsEmailSettingEmailTemplate').empty().append($("<option/>").val(""+data.ConfigMftsEmailSettingEmailTemplate+"").text(""+data.ConfigMftsEmailSettingEmailTemplate+""))
                //.val(""+data.ConfigMftsEmailSettingEmailTemplate+"").trigger("change");


                if(data.ConfigMftsEmailSettingOperation == 'SMTP'){
                    document.getElementById("toggleUpdateConfigEmailSmtp").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateConfigEmailApi").checked = false;
                }


                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateConfigMftsEmailSettingIsActive").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateConfigMftsEmailSettingIsActive").checked = false;
                }

                $("#modalUpdateConfigMftsEmailSetting").modal('show');

            }
        });
    }

    function callConfigMftsEmailSettingInsertController(){

        var IsActive = 1;
        var IsOperation = 'SMTP';

        if($('#toggleInsertConfigEmailSmtp').prop('checked')){
            IsOperation = 'SMTP';
        }
        else{
            IsOperation = 'API';
        }


        if($('#toggleInsertConfigMftsEmailSettingIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.configMftsEmailSettingCompanyCode = $('#txtInsertConfigMftsEmailSettingCompanyCode').val();
        model.configMftsEmailSettingOperation = IsOperation;
        model.configMftsEmailSettingEmail = $('#txtInsertConfigMftsEmailSettingEmail').val();
        model.configMftsEmailSettingEmailTemplate = $('#ddlInsertConfigMftsEmailSettingEmailTemplate').val();
        model.configMftsEmailSettingProtocol = IsOperation;
        model.configMftsEmailSettingHost = $('#txtInsertConfigMftsEmailSettingHost').val();
        model.configMftsEmailSettingPort = $('#txtInsertConfigMftsEmailSettingPort').val();
        model.configMftsEmailSettingUsername = $('#txtInsertConfigMftsEmailSettingUsername').val();
        model.configMftsEmailSettingPassword = $('#txtInsertConfigMftsEmailSettingPassword').val();
        model.configMftsEmailSettingOneTime = '';
        model.configMftsEmailSettingAnyTime = '';
        model.configMftsEmailSettingApiKey = $('#txtInsertConfigMftsEmailSettingApiKey').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtInsertConfigMftsEmailSettingCompanyCode').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingEmail').value = '';
                    document.getElementById('ddlInsertConfigMftsEmailSettingEmailTemplate').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingHost').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingPort').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingUsername').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingPassword').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingApiKey').value = '';

                    $("#modalInsertConfigMftsEmailSetting").modal('hide');

                    callConfigMftsEmailSettingIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callConfigMftsEmailSettingUpdateController(){

        var IsActive = 1;
        var IsOperation = 'SMTP';

        if($('#toggleUpdateConfigEmailSmtp').prop('checked')){
            IsOperation = 'SMTP';
        }
        else{
            IsOperation = 'API';
        }

        if($('#toggleUpdateConfigMftsEmailSettingIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.ConfigMftsEmailSettingNo = $('#txtUpdateConfigMftsEmailSettingNo').val();
        model.configMftsEmailSettingCompanyCode = $('#txtInsertConfigMftsEmailSettingCompanyCode').val();
        model.configMftsEmailSettingOperation = IsOperation;
        model.configMftsEmailSettingEmail = $('#txtInsertConfigMftsEmailSettingEmail').val();
        model.configMftsEmailSettingEmailTemplate = $('#ddlInsertConfigMftsEmailSettingEmailTemplate').val();
        model.configMftsEmailSettingProtocol = IsOperation;
        model.configMftsEmailSettingHost = $('#txtInsertConfigMftsEmailSettingHost').val();
        model.configMftsEmailSettingPort = $('#txtInsertConfigMftsEmailSettingPort').val();
        model.configMftsEmailSettingUsername = $('#txtInsertConfigMftsEmailSettingUsername').val();
        model.configMftsEmailSettingPassword = $('#txtInsertConfigMftsEmailSettingPassword').val();
        model.configMftsEmailSettingOneTime = '';
        model.configMftsEmailSettingAnyTime = '';
        model.configMftsEmailSettingApiKey = $('#txtInsertConfigMftsEmailSettingApiKey').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtInsertConfigMftsEmailSettingCompanyCode').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingEmail').value = '';
                    document.getElementById('ddlInsertConfigMftsEmailSettingEmailTemplate').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingHost').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingPort').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingUsername').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingPassword').value = '';
                    document.getElementById('txtInsertConfigMftsEmailSettingApiKey').value = '';

                    $("#modalUpdateConfigMftsEmailSetting").modal('hide');

                    callConfigMftsEmailSettingIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callConfigMftsEmailSettingUpdateOneTime(setPK){

        var model = new Object();

        model.ConfigMftsEmailSettingNo = $('#txtUpdateConfigMftsEmailSettingOneTimeNo').val();
        model.ConfigMftsEmailSettingOneTime = $('#txtConfigMftsEmailSettingOneTime').val();

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdateOneTime", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $('#modalUpdateConfigMftsEmailSettingOneTime').modal('hide');

                    fnSweetAlert_SaveSuccess();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });

    }

    function callConfigMftsEmailSettingUpdateAnyTime(setPK){

        var model = new Object();

        model.ConfigMftsEmailSettingNo = $('#txtUpdateConfigMftsEmailSettingAnyTimeNo').val();
        model.ConfigMftsEmailSettingAnyTime = $('#txtConfigMftsEmailSettingAnyTime').val();

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdateAnyTime", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $('#modalUpdateConfigMftsEmailSettingAnyTime').modal('hide');

                    fnSweetAlert_SaveSuccess();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });

    }


    function callDeleteConfigMftsEmailOneTime(setPK,Postion){

        var model = new Object();

        model.pk = setPK;
        model.position = Postion;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteOneTime", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $('#modalUpdateConfigMftsEmailSettingOneTime').modal('hide');

                    fnSweetAlert_SaveSuccess();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });

    }


    function DeleteConfigMftsEmailSetting(table){

        $('#tbConfigMftsEmailSettingMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callConfigMftsEmailSettingDeleteController(getPK);
                        callConfigMftsEmailSettingIndex();
                      }
                    })
        });
    }

    function callConfigMftsEmailSettingDeleteController(getPK){

        var model = new Object();

        model.ConfigMftsEmailSettingNo = getPK;
        model.configMftsEmailSettingCompanyCode = '';
        model.configMftsEmailSettingOperation = '';
        model.configMftsEmailSettingEmail = '';
        model.configMftsEmailSettingEmailTemplate = '';
        model.configMftsEmailSettingProtocol = '';
        model.configMftsEmailSettingHost = '';
        model.configMftsEmailSettingPort = '';
        model.configMftsEmailSettingUsername = '';
        model.configMftsEmailSettingPassword = '';
        model.configMftsEmailSettingOneTime = '';
        model.configMftsEmailSettingAnyTime = '';
        model.configMftsEmailSettingApiKey = '';

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "ConfigMftsEmailSetting")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function () {
                    fnSweetAlert_DeleteSuccess();
                }
        });
    }

    function callConfigMftsEmailSettingIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#render-configMftsEmailSetting-create").load("@Url.Action("Index", "ConfigMftsEmailSetting")");

            $("#render-configMftsEmailSetting-update").empty();
            $("#render-configMftsEmailSetting-update").load("@Url.Action("Index", "ConfigMftsEmailSetting")");

            $.unblockUI();
        }, 500);
    }


</script>






