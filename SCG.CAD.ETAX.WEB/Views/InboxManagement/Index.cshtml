@{
    ViewData["Title"] = "Index";
    Layout = null;
}

<section id="basic-tabs-components">
    <div class="row">
        <!-- Tabs with Icon starts -->
        <div class="col-xl-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Inbox events</h4>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="Todo-tab" data-toggle="tab" href="#Todo" aria-controls="home" role="tab" aria-selected="true">
                                <i class="fas fa-home"></i> To do
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="InProgress-tab" data-toggle="tab" onclick="fnSearchInprogressClick()" href="#InProgress" aria-controls="about" role="tab" aria-selected="false">
                                <i class="fas fa-home"></i> In Progress
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="All-tab" data-toggle="tab" href="#All" onclick="fnSearchAllClick()" aria-controls="about" role="tab" aria-selected="false">
                                <i class="fas fa-home"></i> All
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="Todo" aria-labelledby="Todo-tab" role="tabpanel">
                            @await Html.PartialAsync("~/Views/InboxTodo/Index.cshtml")
                        </div>
                        <div class="tab-pane" id="InProgress" aria-labelledby="InProgress-tab" role="tabpanel">
                            @await Html.PartialAsync("~/Views/InboxInprogress/Index.cshtml")
                        </div>
                        <div class="tab-pane" id="All" aria-labelledby="All-tab" role="tabpanel">
                            @await Html.PartialAsync("~/Views/InboxAll/Index.cshtml")
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Tabs with Icon ends -->
    </div>

    <div class="vertical-modal-ex">
        <!-- Modal -->
        <div class="modal fade" id="modalHistory" tabindex="-1" aria-labelledby="modalHistoryTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalHistoryTitle">History</h5>
                    </div>
                    <div class="modal-body">
                        <table class="table table-striped table-hover-animation table-hover" id="tbHistoryModal" style="font-size:12px;padding-bottom:15px;">
                            <thead style="font-size:10px">
                                <tr>
                                    <th style="font-size:10px">User</th>
                                    <th style="font-size:10px">Action</th>
                                    <th style="font-size:10px">Date</th>
                                    <th style="font-size:10px">Reason</th>
                                </tr>
                            </thead>
                        </table>
                        @*<div class="table-responsive">
                            <table class="table mb-0">
                                <thead>
                                    <tr>
                                        <th scope="col" class="text-nowrap">#</th>
                                        <th scope="col" class="text-nowrap">Heading 1</th>
                                        <th scope="col" class="text-nowrap">Heading 2</th>
                                        <th scope="col" class="text-nowrap">Heading 3</th>
                                        <th scope="col" class="text-nowrap">Heading 4</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>2</td>
                                        <td>Table cell</td>
                                        <td>Table cell</td>
                                        <td>Table cell</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>*@
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="fnViewHistoryClose()" class="btn btn-secondary " data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">

    function fnViewHistoryOpen() {
        $("#modalHistory").modal('show');
    }
    function fnViewHistoryClose() {
        $("#modalHistory").modal('hide');
    }


    function fnSearchHistoryModal(id) {
        fnViewHistoryOpen();
        var table = $('#tbHistoryModal').DataTable();
        table.clear().draw();
        table.destroy();
        var getRequestId = id;
        setTimeout(
            function () {
                $('[data-toggle="tooltip"]').tooltip();

                var table = $("#tbHistoryModal").DataTable({

                    "scrollY": false,
                    "processing": true, // for show progress bar
                    "serverSide": false, // for process server side
                    "filter": false, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "pageLength": 50,
                    "scrollX": false,
                    "bLengthChange": false, //thought this line could hide the LengthMenu
                    "bPaginate": false,
                    "bInfo": false,
                    "order": [[2, "desc"]],

                    "ajax": {
                        url: "@Url.Action("RequestHistory", "Request")",
                        type: "POST",
                        data: { jsonString: getRequestId },
                        dataType: "json"
                    },


                    "columns": [
                        {
                            data: "userName",
                        },
                        {
                            data: "action",
                        },
                        {
                            data: "createDate",
                            render: function (data, type, row, meta) {
                                return moment(data).format('DD-MM-YYYY HH:mm');
                            }
                        },
                        {
                            data: "reason",
                            render: function (data, type, row, meta) {
                                return data != null ? data : ""
                            }
                        }
                    ]
                });
            }, 1000);
       
    }


    function fnCheckStatus(status) {
        if (status == "@Variable.RequestStatusCode_WaitAdminCheck") {
            return 'Wait Admin';
        }
        if (status == "@Variable.RequestStatusCode_WaitManager") {
            return 'Wait Manager';
        }
        if (status == "@Variable.RequestStatusCode_WaitOfficer") {
            return 'Wait Officer';
        }
        if (status == "@Variable.RequestStatusCode_Complete") {
            return 'Complete';
        }
        if (status == "@Variable.RequestStatusCode_Reject") {
            return 'Reject';
        }
        return status;
    }

    function fnCheckAction(act) {
        if (act == "@Variable.RequestActionCode_Delete") {
            return 'Delete';
        }
        if (act == "@Variable.RequestActionCode_Undelete") {
            return 'Undelete';
        }
        if (act == "@Variable.RequestActionCode_ReSignNewTrans") {
            return 'Re-Sign PDF XML (Workaround)';
        }
        if (act == "@Variable.RequestActionCode_ReSignNewCert") {
            return 'Re-Sign PDF XML (New cert)';
        }
        if (act == "unzip") {
            return 'Unzip';
        }
        return act;
    }
</script>
