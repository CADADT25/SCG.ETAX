@{
    ViewData["Title"] = " ProfileUserGroup ";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ProfileUserGroup/_Content.cshtml")



<script type="text/javascript">

     $(document).ready(function () {

        RenderProfileUserGroup();

    });


    function callProfileUserRoleInsert() {
        
        var table = $("#tbConfigControlMenu").DataTable({
            
            //"scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "searching": false, 
            "paging": false,
            "destroy": true,

            "ajax": {
                url: "@Url.Action("List", "ConfigControlMenu")",
                type: "POST",
                datatype: "json"
            },


            "columns": [
                
                {
                    render: function (data, type, full, meta){
                        return '<input type="checkbox" class="dt-checkboxes" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    data: "configControlMenuNo",
                    className: "text-center",
                    visible: false
                },
                {
                    data: "configControlMenuName"
                }
            ]
            
        });

    }
    function callProfileUserRoleUpdate(controlmenu) {
        
        var table = $("#tbConfigUpdateControlMenu").DataTable({
            
            //"scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "searching": false, 
            "paging": false,
            "destroy": true,

            "ajax": {
                url: "@Url.Action("List", "ConfigControlMenu")",
                type: "POST",
                datatype: "json"
            },


            "columns": [
                {
                    data: "configControlMenuNo",
                    render: function (data, type, full, meta){
                        if (controlmenu.indexOf(data) >= 0){
                            return '<input type="checkbox" class="dt-checkboxes" name="id[]" checked value="' + $('<div/>').text(data).html() + '">';
                        }else {
                            return '<input type="checkbox" class="dt-checkboxes" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                        }
                    }
                },
                {
                    data: "configControlMenuNo",
                    className: "text-center",
                    visible: false
                },
                {
                    data: "configControlMenuName"
                }
            ]
            
        });

    }

    function RenderProfileUserGroup(){

        var table = $("#tbProfileUserGroupMain").DataTable({

            "scrollY": false,
            "processing": true, 
            "serverSide": false, 
            "filter": true, 
            "orderMulti": true,
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProfileUserGroup")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "profileUserGroupNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "profileUserGroupName",
                    width: "30%"
                },
                {
                    data: "profileUserGroupDescription",
                    width: "30%"
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditProfileUserGroup(table);
    }

    function fnInsertCancelProfileUserGroup(){

        document.getElementById('txtInsertProfileUserGroupName').value = '';
        document.getElementById('txtInsertProfileUserGroupDescription').value = '';

        $("#modalCreateProfileUserGroup").modal('hide');
    }

    function fnUpdateCancelProfileUserGroup(){

        document.getElementById('txtUpdateProfileUserGroupNo').value = '';
        document.getElementById('txtUpdateProfileUserGroupName').value = '';
        document.getElementById('txtUpdateProfileUserGroupDescription').value = '';

        $("#modalUpdateProfileUserGroup").modal('hide');
    }

    function callModalInsertProfileUserGroup(){

        callProfileUserRoleInsert();

        document.getElementById('txtInsertProfileUserGroupName').value = '';
        document.getElementById('txtInsertProfileUserGroupDescription').value = '';

        $("#modalCreateProfileUserGroup").modal('show');
    }

    function fnInsertProfileUserGroup(){

        if ( $('#txtInsertProfileUserGroupName').val() != '' )
        {
            callProfileUserGroupInsertController();
        }
        else {
            fnToastrInputDataFail();
            //validateInsertProfileUserGroup();
        }

    }

    function fnUpdateProfileUserGroup(){

        if ( $('#txtUpdateProfileUserGroupName').val() != '' )
        {
            callProfileUserGroupUpdateController();
        }
        else {
            fnToastrInputDataFail();
            //validateUpdateProfileUserGroup();
        }
    }

    function EditProfileUserGroup(table){

        $('#tbProfileUserGroupMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];
                   

            callProfileUserGroupGetDetailController(getPK);

        });
    }


    function callProfileUserGroupGetDetailController(getPK){

       
        document.getElementById('txtUpdateProfileUserGroupName').value = '';
        document.getElementById('txtUpdateProfileUserGroupDescription').value = '';

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileUserGroup")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                console.log(data);
                document.getElementById('txtUpdateProfileUserGroupNo').value = data.ProfileUserGroupNo;
                document.getElementById('txtUpdateProfileUserGroupName').value = data.ProfileUserGroupName;
                document.getElementById('txtUpdateProfileUserGroupDescription').value = data.ProfileUserGroupDescription;
                
                setTimeout(function(){
                    $('#txtUpdateProfileUserGroupStatus').val(data.Isactive).trigger('change');
                }, 1000);

                callProfileUserRoleUpdate(data.ProfileControlMenu);
                $("#modalUpdateProfileUserGroup").modal('show');
            }
        });
    }

    function callProfileUserGroupInsertController(){

        var model = new Object();

        model.ProfileUserGroupName = $('#txtInsertProfileUserGroupName').val();
        model.ProfileUserGroupDescription = $('#txtInsertProfileUserGroupDescription').val();
        model.isactive = $('#txtInsertProfileUserGroupStatus').val();
        model.ProfileControlMenu = fnGetCheckboxInsert();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProfileUserGroup")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalCreateProfileUserGroup").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileUserGroupIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callProfileUserGroupUpdateController(){

        var model = new Object();

        model.ProfileUserGroupNo = $('#txtUpdateProfileUserGroupNo').val();
        model.ProfileUserGroupName = $('#txtUpdateProfileUserGroupName').val();
        model.ProfileUserGroupDescription = $('#txtUpdateProfileUserGroupDescription').val();
        model.isactive = $('#txtInsertProfileUserGroupStatus').val();
        model.ProfileControlMenu = fnGetCheckboxUpdate();
        
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProfileUserGroup")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalUpdateProfileUserGroup").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileUserGroupIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }
    
    function fnGetCheckboxInsert(){
        var table = $('#tbConfigControlMenu').DataTable();
        var data = table.rows( function ( idx, data, node ) {
        return $(node).find('.dt-checkboxes:input[type="checkbox"]').prop('checked');
        }).data().toArray();
        console.log(data);
        var menu = [];
        $.each(data, function (i, data) {
                menu.push(data.configControlMenuNo);
            });

        return menu.toString();
    }
    function fnGetCheckboxUpdate(){
        var table = $('#tbConfigUpdateControlMenu').DataTable();
        var data = table.rows( function ( idx, data, node ) {
        return $(node).find('.dt-checkboxes:input[type="checkbox"]').prop('checked');
        }).data().toArray();
        console.log(data);
        var menu = [];
        $.each(data, function (i, data) {
                menu.push(data.configControlMenuNo);
            });

        return menu.toString();
    }

    function callProfileUserGroupIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ProfileUserGroup")");
            $.unblockUI();
        }, 500);
    }


</script>