@{
    ViewData["Title"] = "OutputSearchXmlZip Profile";
    Layout = null;
}


@await Html.PartialAsync("~/Views/OutputSearchXmlZip/_Search.cshtml")
<div class="divider">
</div>
@await Html.PartialAsync("~/Views/OutputSearchXmlZip/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {

        $('#OutputSearchXmlZipCustomerCode').select2();
        $('#OutputSearchXmlZipStatus').select2();
        $('#OutputSearchXmlZipDocType').select2();

        $("#OutputSearchXmlZipDate").flatpickr({
            mode: "range",
            dateFormat: "d-m-Y"
        });

        fnDropdownOutputSearchXmlZipCompanyCode();
        //fnDropdownOutputSearchXmlZipDocType();

        $("#tbOutputSearchXmlZipMain").removeData();

        RenderOutputSearchXmlZip('');

    });


    function fnDropdownOutputSearchXmlZipCompanyCode() {

        $.getJSON("@Url.Action("DropDownList", "ProfileCompany")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.companyCode,
                        text: data.companyCode
                    }).html(data.companyCode).appendTo("#OutputSearchXmlZipCustomerCode");
            });
        })
    }

    function fnDropdownOutputSearchXmlZipDocType() {

        $.getJSON("@Url.Action("DropDownList", "RdDocument")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.rdDocumentCode,
                        text: data.rdDocumentNameTh
                    }).html(data.rdDocumentNameTh).appendTo("#OutputSearchXmlZipDocType");
            });
        })
    }

    function fnSearchOutputDataPrinting(){

        $("#tbOutputSearchXmlZipMain").remove();


        var getCompanyCode = $('#OutputSearchXmlZipCustomerCode').val();
        var getDate = $('#OutputSearchXmlZipDate').val();

        var model = new Object();

        model.outPutSearchCompanyCode = getCompanyCode;
        model.outPutSearchDate = getDate;

        var JsonString = JSON.stringify(model);

                //alert(JsonString);

        RenderOutputSearchXmlZip();
    }

    function RenderOutputSearchXmlZip(){

        var table = $("#tbOutputSearchXmlZipMain").DataTable({

            "scrollY": true,
            "scrollX": true,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "searching": true,
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "OutputSearchXmlZip")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "outputSearchXmlZipCompanyCode",
                    width: "10%"
                },
                {
                    data: "createDate",
                    render: function(data, type, row, meta) {
                            return moment(data).format('YYYY-MM-DD')},
                    width: "10%"
                },
                {
                    data: "outputSearchXmlZipFileName",
                    width: "20%",
                    render: function (data, type, row) {
                        return' '+ data.substr( 0, 30 ) + '...' + ' <a onclick="fnCallFullFilePathXml(' + row['outputSearchXmlZipNo'] +');"> <i class="fas fa-folder-open"> </i> </a>';
                    }
                },
                {
                    data: "outputSearchXmlZipDocType",
                    width: "10%",
                    render: function (data, type, row) {
                        return'<div class="badge badge-light-primary"> '+ data +' </div>';
                    }
                },
                {
                    data: "outputSearchXmlZipFullPath",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        if ('@ViewBag.showDOWNLOAD'.toUpperCase() == 'TRUE')
                        {
                            return'<a onclick="DownloadFile(' + row['outputSearchXmlZipNo'] +')" class="btn btn-primary btn-sm"> Download </a>';
                        }
                        return '';
                    }
                },
                //{
                //    data: "outputSearchXmlZipDowloadStatus",
                //    width: "10%",
                //    visible: false
                //},
                {
                    data: "outputSearchXmlZipNo",
                    className: "text-center",
                    width: "2%",
                        render: function (data, type, row) {
                            if(row['outputSearchXmlZipDowloadStatus'] == '1'){
                                return'<a onclick="callEditOutputSearchXmlZip(' + data +')" class="dt-center editor-edit text-center text-warning"><i class="pointer fas fa-clock"/> </i></a>';
                            }
                            return '';
                        }
                }
            ]
        });


        //EditOutputSearchXmlZip(table);
        //DeleteOutputSearchXmlZip(table);
    }


    function EditOutputSearchXmlZip(table){

        $('#tbOutputSearchXmlZipMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callOutputSearchXmlZipGetDetailController(getPK);
        });
    }
    function callEditOutputSearchXmlZip(getPK){
       callOutputSearchXmlZipGetDetailController(getPK);
    }


    function fnCallFullFilePathXml(PK){

        $('#modalGetOutputSearchXmlFullPath').modal('show');

        $('#fullPathXmlGetFillName').empty();
        $('#fullPathXmlGetFillPath').empty();
        $('#fullPathXmlGetDatetime').empty();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "OutputSearchXmlZip")",
            data: { id : PK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                $('#fullPathXmlGetFillName').append(data.OutputSearchXmlZipFileName);
                $('#fullPathXmlGetFillPath').append(data.OutputSearchXmlZipFullPath);
                $('#fullPathXmlGetDatetime').append(data.CreateDate);

            }
        });
    }

    function fnCancelGetOutputSearchXmlFullPath(){
        $('#modalGetOutputSearchXmlFullPath').modal('hide');
    }

    function fnTimelineCancelOutputSearchXmlZip(){

        $("#modalUpdateOutputSearchXmlZip").modal('hide');
    }

    function ExportOutputSearchXmlZip(){

        $.blockUI();

        callOutputSearchXmlZipExportController();

        $.unblockUI();
    }


    // [Begin] Ajax call Controller

    function callOutputSearchXmlZipGetDetailController(getPK){
        $.ajax({
            type: "GET",
            url: "@Url.Action("DetailHistory", "OutputSearchXmlZip")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {
                $('#appendSearchXmlZipHistory').empty();
                $.each(result.data, function (i, slaveValue) {
                            var date = moment(slaveValue.outputSearchXmlZipDowloadHistoryTime).format('DD/MM/YYYY HH:mm:ss');
                            var textappend = "<li class='timeline-item'>";
                            textappend = "<span class='timeline-point timeline-point-success'>";
                            textappend += "<i class='fas fa-download text-success'></i>";
                            textappend += "</span>";
                            textappend += "<div class='timeline-event'>";
                            textappend += "<div class='d-flex justify-content-between flex-sm-row flex-column mb-sm-0 mb-1'>";
                            textappend += "<h6 class='mb-50'>" + slaveValue.outputSearchXmlZipDowloadHistoryBy + "</h6>";
                            textappend += "<span class='timeline-event-time'>" + date + "</span>";
                            textappend += "</div>";
                            textappend += "<p>The file has been downloaded..</p>";
                            textappend += "<hr />";
                            textappend += "<div class='d-flex justify-content-between flex-sm-row flex-column mb-sm-0 mb-1'>";
                            textappend += "</div>";
                            textappend += "</div>";
                            textappend += "</li>";

                            //var li = document.createElement('li');
                            //var text = document.createTextNode(textappend);
                            //li.innerHTML(textappend);
                            //document.getElementById("appendSearchEmailSendHistory").appendChild(li);
                            $('#appendSearchXmlZipHistory').append(textappend);
                });
                $("#modalUpdateOutputSearchXmlZip").modal('show');

            }
        });
    }


    function callOutputSearchXmlZipExportController(){

        var getXmlSearchCompanyCode = $('#OutputSearchXmlZipCustomerCode').val();
        var getXmlSearchDateBetween = $('#OutputSearchXmlZipDate').val();
        var getXmlSearchDocType = $('#OutputSearchXmlZipDocType').val();
        var getXmlSearchDownloadStatus = $('#OutputSearchXmlZipStatus').val();

        var model = new Object();

        model.outPutSearchCompanyCode = getXmlSearchCompanyCode;
        model.outPutSearchDate = getXmlSearchDateBetween;
        model.outPutSearchDocType = getXmlSearchDocType;
        model.outPutSearchStatus = getXmlSearchDownloadStatus;

        var JsonString = JSON.stringify(model);

        $.ajax({
            type: "GET",
            //url: "@Url.Action("ExportToCsv", "OutputSearchXmlZip")",
            url: "@Url.Action("ExportFile", "OutputSearchXmlZip")",
            data: { jsonSearchString : JsonString },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {
                //Convert Base64 string to Byte Array.
                var bytes = Base64ToBytes(response.outpuT_DATA);
                var fileName = response.message;
                //Convert Byte Array to BLOB.
                var blob = new Blob([bytes], { type: "application/octetstream" });

                //Check the Browser type and download the File.
                var isIE = false || !!document.documentMode;
                if (isIE) {
                    window.navigator.msSaveBlob(blob, fileName);
                } else {
                    var url = window.URL || window.webkitURL;
                    link = url.createObjectURL(blob);
                    var a = $("<a />");
                    a.attr("download", fileName);
                    a.attr("href", link);
                    $("body").append(a);
                    a[0].click();
                    $("body").remove(a);
                }

                //var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                //var downloadUrl = URL.createObjectURL(blob);

                //var a = document.createElement("a");

                //a.href = downloadUrl;

                //a.download = "scg-etax-OutputSearchXmlZip.csv";

                //document.body.appendChild(a);

                //a.click();
            }
        });
    }



    function fnSearchOutputSearchXmlZip(){

        var getXmlSearchCompanyCode = $('#OutputSearchXmlZipCustomerCode').val();
        var getXmlSearchDateBetween = $('#OutputSearchXmlZipDate').val();
        var getXmlSearchDocType = $('#OutputSearchXmlZipDocType').val();
        var getXmlSearchDownloadStatus = $('#OutputSearchXmlZipStatus').val();

        var model = new Object();

        model.outPutSearchCompanyCode = getXmlSearchCompanyCode;
        model.outPutSearchDate = getXmlSearchDateBetween;
        model.outPutSearchDocType = getXmlSearchDocType;
        model.outPutSearchStatus = getXmlSearchDownloadStatus;

        var JsonString = JSON.stringify(model);

        $('#tbOutputSearchXmlZipMain').DataTable().destroy();


        $('#tbOutputSearchXmlZipMain').DataTable({

            "scrollY": true,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "retrieve": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax":
                {
                    type: "GET",
                    url: "@Url.Action("Search", "OutputSearchXmlZip")",
                    data: { jsonSearchString : JsonString },
                    dataType: "json"
                },
                "columns": [


                {
                    data: "outputSearchXmlZipCompanyCode",
                    width: "10%"
                },
                {
                    data: "createDate",
                    render: function(data, type, row, meta) {
                            return moment(data).format('YYYY-MM-DD')},
                    width: "10%"
                },
                {
                    data: "outputSearchXmlZipFileName",
                    width: "20%",
                    render: function (data, type, row) {
                        return' '+ data.substr( 0, 30 ) + '...' + ' <a onclick="fnCallFullFilePathXml(' + row['outputSearchXmlZipNo'] +');"> <i class="fas fa-folder-open"> </i> </a>';
                    }
                },
                {
                    data: "outputSearchXmlZipDocType",
                    width: "10%",
                    render: function (data, type, row) {
                        return'<div class="badge badge-light-primary"> '+ data +' </div>';
                    }
                },
                {
                    data: "outputSearchXmlZipFullPath",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        if ('@ViewBag.showDOWNLOAD'.toUpperCase() == 'TRUE')
                        {
                            return'<a onclick="DownloadFile(' + row['outputSearchXmlZipNo'] +')" class="btn btn-primary btn-sm"> Download </a>';
                        }
                        return '';
                    }
                },
                {
                    data: "outputSearchXmlZipDowloadStatus",
                    width: "10%",
                    visible: false
                },
                {
                    data: "outputSearchXmlZipNo",
                    className: "text-center",
                    width: "2%",
                        render: function (data, type, row) {
                            if(row['outputSearchXmlZipDowloadStatus'] == '1'){
                                return'<a onclick="callEditOutputSearchXmlZip(' + data +')" class="dt-center editor-edit text-center text-warning"><i class="pointer fas fa-clock"/> </i></a>';
                            }
                            return '';
                            //return'<a onclick="callEditOutputSearchXmlZip(' + data +')" class="dt-center editor-edit text-center text-warning"><i class="pointer fas fa-clock"/> </i></a>';
                        }
                }

            ],


             destroy : true

        }).ajax.reload();

    }

    // [end] Ajax call Controller

    function DownloadFile(getpk) {

        var model = new Object();

        model.OutputSearchXmlZipNo = getpk;
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 1;
        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("DownloadZipFile", "OutputSearchXmlZip")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {
                data = $.parseJSON(resp)
                //Convert Base64 string to Byte Array.
                var bytes = Base64ToBytes(data.outpuT_DATA);
                var fileName = data.message;
                //Convert Byte Array to BLOB.
                var blob = new Blob([bytes], { type: "application/octetstream" });

                //Check the Browser type and download the File.
                var isIE = false || !!document.documentMode;
                if (isIE) {
                    window.navigator.msSaveBlob(blob, fileName);
                } else {
                    var url = window.URL || window.webkitURL;
                    link = url.createObjectURL(blob);
                    var a = $("<a />");
                    a.attr("download", fileName);
                    a.attr("href", link);
                    $("body").append(a);
                    a[0].click();
                    $("body").remove(a);
                }
            }
        });
    };
    function Base64ToBytes(base64) {
        var s = window.atob(base64);
        var bytes = new Uint8Array(s.length);
        for (var i = 0; i < s.length; i++) {
            bytes[i] = s.charCodeAt(i);
        }
        return bytes;
    };



    function callOutputSearchXmlZipIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#render-OutputSearchXmlZip-create").load("@Url.Action("Index", "OutputSearchXmlZip")");
            $.unblockUI();
        }, 500);
    }


</script>






