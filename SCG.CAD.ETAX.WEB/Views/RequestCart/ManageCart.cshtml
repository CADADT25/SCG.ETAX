@{
    Layout = null;
    ViewData["Title"] = "My Cart";
}
@model SCG.CAD.ETAX.MODEL.etaxModel.ManageRequestCartModel

<style>

</style>


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-end align-items-center">
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-xl-6 col-md-6 col-12 mb-1">
                        <div class="form-group">
                            <label for="helpInputTop">Select Action</label>
                            <select class="select2 form-control" id="cartSelectAction" onchange="onChangeAction(this)">
                                <option value="" hidden>--- Please select action ---</option>
                                <option value="delete">Delete</option>
                                <option value="undelete">Undelete</option>
                                <option value="unzip">Unzip</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-xl-6 col-md-6 col-12 mb-1">
                        <div class="form-group">
                            <label for="helpInputTop">Select Manager</label>
                            <select class="select2 form-control" id="cartSelectManager" onchange="onChangeSearchManager(this)">
                                <option value="" hidden>--- Please select manager ---</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-xl-6 col-md-6 col-12 mb-1">
                        <div class="form-group">
                            <label for="helpInputTop" style="color:transparent">Multi Delete</label>
                            <br />
                            <a class="btn btn-primary btn-block" onclick="fnMultiDeleteCart();"> Multi Delete </a>
                        </div>
                    </div>
                    <div class="col-xl-6 col-md-6 col-12 mb-1">
                        <div class="form-group">
                            <label for="helpInputTop" style="color:transparent">Submit Request</label>
                            <br />
                            <a class="btn btn-primary btn-block" onclick="fnSubmitRequest();"> Submit Request </a>
                        </div>
                    </div>
                </div>
                <div class="mb-0 table-responsive">
                    <table class="table table-striped table-hover-animation table-hover" id="tbCartMain" style="font-size:12px;padding-bottom:15px;">
                        <thead style="font-size:10px">
                            <tr>
                                <th></th>
                                <th style="font-size:10px">Billing No.</th>
                                <th style="font-size:10px">Posting year</th>
                                <th style="font-size:10px">Company</th>
                                <th style="font-size:10px">Customer</th>
                                <th style="font-size:10px">IC/O2C</th>
                                <th style="font-size:10px">Document Type</th>
                                <th style="font-size:10px">Data Source</th>
                                <th style="font-size:10px">Action</th>
                                @* <th style="font-size:10px;white-space:nowrap">Billing Date</th>
                                <th style="font-size:10px;white-space:nowrap">Processing Date</th>
                                <th style="font-size:10px;white-space:nowrap">Create Date</th>
                                <th style="font-size:10px">XML Gen</th>
                                <th style="font-size:10px">XML Sign</th>
                                <th style="font-size:10px">PDF Sign</th>
                                <th style="font-size:10px">Print</th>
                                <th style="font-size:10px">Email</th>
                                <th style="font-size:10px">XML</th>
                                <th style="font-size:10px">Indexing</th>*@
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#cartSelectAction').select2();
        $('#cartSelectManager').select2();

        fnDropdownCartSearchManager();
        fnRenderCartList();
        fnDefaultValueAction();
    });

    function fnDropdownCartSearchManager() {

        $.getJSON("@Url.Action("DropDownList", "ProfileUserManagement")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.userEmail,
                        text: data.firstName + ' ' + data.lastName + ' (' + data.userEmail + ')'
                    }).html(data.companyCode).appendTo("#cartSelectManager");
            });
            fnDefaultValueManager();
        })
    }

    function onChangeSearchManager(self){
         var value = self.value;
         localStorage.setItem("cartManager", value);
    }

    function onChangeAction(self) {
        var value = self.value;
        localStorage.setItem("cartAction", value);
    }

    function fnDefaultValueManager(){
        if (localStorage.getItem("cartManager") != null && localStorage.getItem("cartManager") != "") {
            $("#cartSelectManager").select2().val(localStorage.getItem("cartManager")).trigger("change");
        }
    }

    function fnDefaultValueAction(){
        if (localStorage.getItem("cartAction") != null && localStorage.getItem("cartAction") != "") {
            $("#cartSelectAction").select2().val(localStorage.getItem("cartAction")).trigger("change");
        }
    }

    function fnDeleteCart(id) {
        Swal.fire({
            title: 'Are you sure to delete?',
            //text: "" + datas,
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes',
            confirmButtonClass: 'btn btn-primary',
            cancelButtonClass: 'btn btn-danger ml-1',
            buttonsStyling: false,
        }).then(function (result) {
            if (result.isConfirmed) {
                var model = new Object();
                model.TransactionNo = 0;
                model.BillingNumber = "xx";
                model.CompanyCode = "xx";

                model.CreateBy = $("#leftSideEmail").text();
                model.CreateDate = new Date();
                model.UpdateBy = $("#leftSideEmail").text();
                model.UpdateDate = new Date();
                model.Id = id;
                var getJsonString = JSON.stringify(model);
                $.blockUI();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteCart", "RequestCart")",
                    data: { jsonString: getJsonString },
                    dataType: "text",
                    success: function (res) {
                        var ret = $.parseJSON(res);
                        if (ret.status) {
                            fnClearRenderCartList();
                            fnRenderCartList();
                            fnRenderTopCart();
                            fnSweetAlert_Success();
                        }
                        else {
                            fnSweetAlert_Error(ret.erroR_MESSAGE);
                        }
                        $.unblockUI();
                    }
                });
            }
        });
    }

    function fnMultiDeleteCart() {
        var datas = fnGetCartCheckbox();
        if (datas.length == 0) {
            fnSweetAlert_WarningSelectItem();
        } else {
            Swal.fire({
                title: 'Are you sure to delete?',
                //text: "" + datas,
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.isConfirmed) {
                    var models = [];
                    datas.forEach(obj => {
                        var model = new Object();
                        model.Id = obj.id;
                        model.TransactionNo = obj.transactionNo;
                        model.BillingNumber = obj.billingNumber;
                        model.CompanyCode = obj.companyCode;

                        model.CreateBy = $("#leftSideEmail").text();
                        model.CreateDate = new Date();
                        model.UpdateBy = $("#leftSideEmail").text();
                        model.UpdateDate = new Date();
                        models.push(model);
                    });
                    $.blockUI();
                    var getJsonString = JSON.stringify(models);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("MultiDeleteCart", "RequestCart")",
                        data: { jsonString: getJsonString },
                        dataType: "text",
                        success: function (res) {
                            var ret = $.parseJSON(res);
                            if (ret.status) {
                                fnClearRenderCartList();
                                fnRenderCartList();
                                fnRenderTopCart();
                                fnSweetAlert_Success();
                            }
                            else {
                                fnSweetAlert_Error(ret.erroR_MESSAGE);
                            }
                            $.unblockUI();
                        }
                    });
                }
            });
        }
    }

    function fnResetlocalStorageValue(){
        localStorage.setItem("cartManager", "");
        localStorage.setItem("cartAction", "");
    }

    function fnSubmitRequest(){
        if ($('#tbCartMain').DataTable().data().count() == 0){
            Swal.fire({
                title: 'Warning',
                text: 'Data not found in your cart.',
                    icon: 'warning',
                    customClass: {
                        confirmButton: 'btn btn-primary'
                    }
                });
        }else{
            var getManager = $('#cartSelectManager').val();
            var getAction = $('#cartSelectAction').val();
            var error = false;
            var errorMsg = '';
            if (getManager == "" || getManager == 'undefined') {
                error = true;
                errorMsg = ' Manager';
            }
            if (getAction == "" || getAction == 'undefined') {
                if (error) {
                    errorMsg = errorMsg + ' and Action';
                } else {
                    errorMsg = ' Action';
                }
                error = true;
            }
            if (error) {
                Swal.fire({
                    title: 'Warning',
                    text: 'Please select' + errorMsg,
                    icon: 'warning',
                    customClass: {
                        confirmButton: 'btn btn-primary'
                    }
                });
            } else {
                Swal.fire({
                    title: 'Are you sure to Submit?',
                    //text: "" + datas,
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    confirmButtonClass: 'btn btn-primary',
                    cancelButtonClass: 'btn btn-danger ml-1',
                    buttonsStyling: false,
                }).then(function (result) {
                    if (result.isConfirmed) {
                        //var models = [];
                        //datas.forEach(obj => {
                        //    var model = new Object();
                        //    model.Id = obj.id;
                        //    model.TransactionNo = obj.transactionNo;
                        //    model.BillingNumber = obj.billingNumber;
                        //    model.CompanyCode = obj.companyCode;

                        //    model.CreateBy = $("#leftSideEmail").text();
                        //    model.CreateDate = new Date();
                        //    model.UpdateBy = $("#leftSideEmail").text();
                        //    model.UpdateDate = new Date();
                        //    models.push(model);
                        //});
                        //var getJsonString = JSON.stringify(models);
                        $.blockUI();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SubmitRequest", "RequestCart")",
                            data: { action: getAction, manager: getManager },
                            dataType: "text",
                            success: function (res) {
                                var ret = $.parseJSON(res);
                                if (ret.status) {
                                    fnClearRenderCartList();
                                    fnRenderCartList();
                                    fnRenderTopCart();
                                    fnSweetAlert_Success();
                                    fnResetlocalStorageValue();
                                }
                                else {
                                    fnClearRenderCartList();
                                    fnRenderCartList();
                                    fnRenderTopCart();
                                    fnSweetAlert_Error(ret.message);
                                }
                                $.unblockUI();
                            }
                        });
                    }
                });
            }
        }
        
    }

    function fnGetCartCheckbox() {
        var table = $('#tbCartMain').DataTable();
        var data = table.rows(function (idx, data, node) {
            return $(node).find('.cart-checkboxes:input[type="checkbox"]').prop('checked');
        }).data().toArray();

        return data;
    }

    function fnClearRenderCartList(){
        var table = $('#tbCartMain').DataTable();
 
        table.clear().draw();
        table.destroy();
    }

    function fnRenderCartList() {

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbCartMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 50,
            "scrollX": true,

            "ajax": {
                url: "@Url.Action("List", "RequestCart")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    width: "2%",
                    render: function (data, type, full, meta) {
                        return '<input type="checkbox" class="cart-checkboxes" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                    }
                },

                {
                    data: "billingNumber",
                    width: "10%",
                    render: function (data, type, row) {
                        //return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-eye text-primary"> </i> </a>';
                        return ' ' + data.substr(0, 100);
                    }
                },
                {
                    data: "postingYear",
                    width: "5%",
                    render: function (data, type, row) {
                        //return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-pen text-primary"> </i> </a>';
                        return ' ' + data.substr(0, 100);
                    }
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%"
                },
                {
                    data: "ic",
                    width: "5%",
                    render: function (data, type, row) {
                        return (data == "1") ? 'IC' : 'O2C';
                    }
                },
                {
                    data: "docType",
                    width: "5%"
                },
                {
                    data: "sourceName",
                    width: "5%"
                },
                {
                    data: "id",
                    width: "2%",
                    render: function (data, type, row) {
                        return '<a onclick="fnDeleteCart(' + data + ');" class="dropdown-item"><svg data-v-9a6e255c="" xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash"><polyline data-v-9a6e255c="" points="3 6 5 6 21 6"></polyline><path data-v-9a6e255c="" d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg><span data-v-9a6e255c="" class="align-middle ml-50">Delete</span></a>';
                    }
                }
                //{
                //    data: "billingDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "processingDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "createDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "generateStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "xmlSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "pdfSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "printStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "emailSendStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "xmlCompressStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "pdfIndexingStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //}
            ]
        });
    }

    function fnCheckStatus(status) {
        if (status == "Successful") {
            return '<div class="text-success text-center icon-wrapper hovertext hoversuccess" data-hover="Successful"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></div>';
        }
        else if (status == "Failed") {
            return '<div class="text-danger text-center icon-wrapper hovertext hoverfail" data-hover="Failed"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg></div>';
        }
        else {
            return '<div class="text-warning text-center icon-wrapper hovertext hoverwait" data-hover="Watting"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clock"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg></div>';
        }
    }



</script>