@{
    Layout = null;
    ViewData["Title"] = "My Cart";
}
@model SCG.CAD.ETAX.MODEL.etaxModel.ManageRequestCartModel

<style>
  
</style>


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-end align-items-center">
            </div>
            <div class="card-body">
                <div class="mb-0 table-responsive" id="sectionTransactionDescription">
                    <table class="table table-striped table-hover-animation table-hover" id="tbCartMain" style="font-size:12px;padding-bottom:15px;">
                        <thead style="font-size:10px">
                            <tr>
                                <th></th>
                                <th style="font-size:10px">Billing No.</th>
                                <th style="font-size:10px">Posting year</th>
                                <th style="font-size:10px">Company</th>
                                <th style="font-size:10px">Customer</th>
                                <th style="font-size:10px">IC/O2C</th>
                                <th style="font-size:10px">Document Type</th>
                                <th style="font-size:10px">Data Source</th>
                                <th style="font-size:10px;white-space:nowrap">Billing Date</th>
                                <th style="font-size:10px;white-space:nowrap">Processing Date</th>
                                <th style="font-size:10px;white-space:nowrap">Create Date</th>
                                <th style="font-size:10px">XML Gen</th>
                                <th style="font-size:10px">XML Sign</th>
                                <th style="font-size:10px">PDF Sign</th>
                                <th style="font-size:10px">Print</th>
                                <th style="font-size:10px">Email</th>
                                <th style="font-size:10px">XML</th>
                                <th style="font-size:10px">Indexing</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        RenderTransaction();
    });
    function RenderTransaction() {

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbCartMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 50,
            "scrollX": true,

            "ajax": {
                url: "@Url.Action("List", "transactionDescription")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    width: "2%",
                    render: function (data, type, full, meta) {
                        return '<input type="checkbox" class="dt-checkboxes" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                    }
                },

                {
                    data: "billingNumber",
                    width: "10%",
                    render: function (data, type, row) {
                        return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-eye text-primary"> </i> </a>';
                    }
                },
                {
                    data: "postingYear",
                    width: "5%",
                    render: function (data, type, row) {
                        return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-pen text-primary"> </i> </a>';
                    }
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%"
                },
                {
                    data: "ic",
                    width: "5%",
                    render: function (data, type, row) {
                        return (data == "1") ? 'IC' : 'O2C';
                    }
                },
                {
                    data: "docType",
                    width: "5%"
                },
                {
                    data: "sourceName",
                    width: "5%"
                },
                {
                    data: "billingDate",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "processingDate",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "createDate",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "generateStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "printStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "emailSendStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlCompressStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfIndexingStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                }
            ]
        });
    }

    function fnCheckStatus(status) {
        if (status == "Successful") {
            return '<div class="text-success text-center icon-wrapper hovertext hoversuccess" data-hover="Successful"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></div>';
        }
        else if (status == "Failed") {
            return '<div class="text-danger text-center icon-wrapper hovertext hoverfail" data-hover="Failed"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg></div>';
        }
        else {
            return '<div class="text-warning text-center icon-wrapper hovertext hoverwait" data-hover="Watting"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clock"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg></div>';
        }
    }
</script>