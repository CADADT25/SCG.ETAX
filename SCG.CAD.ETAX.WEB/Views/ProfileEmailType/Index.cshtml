@{
    ViewData["Title"] = " ProfileEmailType ";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ProfileEmailType/_Content.cshtml")



<script type="text/javascript">

     $(document).ready(function () {

        RenderProfileEmailType();

    });




    function RenderProfileEmailType(){

        var table = $("#tbProfileEmailTypeMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProfileEmailType")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "emailTypeNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "emailTypeCode",
                    width: "10%",
                    visible: false
                },
                {
                    data: "emailTypeName",
                    width: "10%"
                },
                {
                    data: "emailTypeDescription",
                    width: "10%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditProfileEmailType(table);
        DeleteProfileEmailType(table);
    }

    function fnInsertCancelProfileEmailType(){

        document.getElementById('txtInsertProfileEmailTypeCode').value = '';
        document.getElementById('txtInsertProfileEmailTypeName').value = '';
        document.getElementById('txtInsertProfileEmailTypeDescription').value = '';

        $("#modalCreateProfileEmailType").modal('hide');
    }

    function fnUpdateCancelProfileEmailType(){

        document.getElementById('txtUpdateProfileEmailTypeCode').value = '';
        document.getElementById('txtUpdateProfileEmailTypeName').value = '';
        document.getElementById('txtUpdateProfileEmailTypeDescription').value = '';


        $("#modalUpdateProfileEmailType").modal('hide');
    }

    function callModalInsertProfileEmailType(){

        document.getElementById('txtInsertProfileEmailTypeCode').value = '';
        document.getElementById('txtInsertProfileEmailTypeName').value = '';
        document.getElementById('txtInsertProfileEmailTypeDescription').value = '';

        $("#modalCreateProfileEmailType").modal('show');
    }

    function fnInsertProfileEmailType(){

        if ( $('#txtInsertProfileEmailTypeCode').val() != '' &&
             $('#txtInsertProfileEmailTypeName').val() != '' )
        {
            callProfileEmailTypeInsertController();
        }
        else {
            fnToastrInputDataFail();
            validateInsertProfileEmailType();
        }

    }

    function fnUpdateProfileEmailType(){

         if ( $('#txtUpdateProfileEmailTypeCode').val() != '' &&
              $('#txtUpdateProfileEmailTypeName').val() != '' )

        {
            callProfileEmailTypeUpdateController();
        }
        else {
            fnToastrInputDataFail();
            validateUpdateProfileEmailType();
        }
    }

    function EditProfileEmailType(table){

        $('#tbProfileEmailTypeMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callProfileEmailTypeGetDetailController(getPK);

        });
    }


    function ExportProfileEmailType(){

        $.blockUI();

        callProfileEmailTypeExportController();

        $.unblockUI();
    }


    function callProfileEmailTypeGetDetailController(getPK){


        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileEmailType")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateProfileEmailTypeNo').value = data.EmailTypeNo;
                document.getElementById('txtUpdateProfileEmailTypeCode').value = data.EmailTypeCode;
                document.getElementById('txtUpdateProfileEmailTypeName').value = data.EmailTypeName;
                document.getElementById('txtUpdateProfileEmailTypeDescription').value = data.EmailTypeDescription;


                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateProfileEmailType").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateProfileEmailType").checked = false;
                }

                $("#modalUpdateProfileEmailType").modal('show');
            }
        });
    }

    function callProfileEmailTypeInsertController(){

        var IsActive = ($('#toggleInsertProfileEmailType').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.EmailTypeCode = $('#txtInsertProfileEmailTypeCode').val();
        model.EmailTypeName = $('#txtInsertProfileEmailTypeName').val();
        model.EmailTypeDescription = $('#txtInsertProfileEmailTypeDescription').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProfileEmailType")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalCreateProfileEmailType").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileEmailTypeIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callProfileEmailTypeUpdateController(){

        var IsActive = 1;

        var IsActive = ($('#toggleUpdateProfileEmailType').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.EmailTypeNo = $('#txtUpdateProfileEmailTypeNo').val();
        model.EmailTypeCode = $('#txtUpdateProfileEmailTypeCode').val();
        model.EmailTypeName = $('#txtUpdateProfileEmailTypeName').val();
        model.EmailTypeDescription = $('#txtUpdateProfileEmailTypeDescription').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProfileEmailType")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalUpdateProfileEmailType").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileEmailTypeIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }


    function callProfileEmailTypeExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ProfileEmailType")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ProfileEmailType.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    function callProfileEmailTypeIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ProfileEmailType")");
            $.unblockUI();
        }, 500);
    }






</script>