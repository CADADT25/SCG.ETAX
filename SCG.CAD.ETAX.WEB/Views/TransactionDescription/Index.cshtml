@{
    ViewData["Title"] = "Transaction Profile";
    Layout = null;
}

@await Html.PartialAsync("~/Views/transactionDescription/_Search.cshtml")


@await Html.PartialAsync("~/Views/transactionDescription/_Content.cshtml")

<script type="text/javascript">

     $(document).ready(function () {

        $('#tranSearchStatus').select2();
        $('#tranSearchIcOc').select2();
        $('#tranSearchCompanyCode').select2();
        $('#tranSearchOutputType').select2();
        $('#tranSearchDocumentType').select2();
        $('#tranSearchDateType').select2();
        $('#tranSearchDataSource').select2();
        $('#tranSearchSellOrg').select2();

        $("#tranSearchDateRang").flatpickr({
            mode: "range"
        });

        fnDropdownTransactionSearchCompanyCode();
        fnDropdownTransactionSearchDocumentType();
        fnDropdownTransactionSearchDataSource();
        fnDropdownTransactionSearchSellOrg();

        RenderTransaction('');

    });


    function RenderTransaction(JsonString){

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbTransactionMain").DataTable({

            "targets": 0,
            "scrollY": false,
            "processing": true,
            //"retrieve": true,
            "serverSide": true,
            "filter": true,
            "orderMulti": true,
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "transactionDescription")",
                type: "POST",
                data: { transactionSearchJson : JsonString },
                datatype: "json"
            },


            "columns": [

                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    data: "transactionNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "sellOrg",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%"
                },
                {
                    data: "billingNumber",
                    width: "10%"
                },
                {
                    data: "generateStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "xmlSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "pdfSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "printStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "emailSendStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "xmlCompressStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "pdfIndexingStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: "isactive",
                    width: "5%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' : 
                        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-eye" data-toggle="tooltip" title="View data on record"/>',
                    orderable: false,
                    width: "2%"
                }
            ],
            select: {
            style:    'os',
            selector: 'td:first-child'
        },
        });


        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();

    }



    function fnDropdownTransactionSearchCompanyCode() {

        $.getJSON("@Url.Action("DropDownList", "ProfileCompany")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.companyCode,
                        text: data.companyCode
                    }).html(data.companyCode).appendTo("#tranSearchCompanyCode");
            });
        })
    }

    function fnDropdownTransactionSearchDocumentType() {

        $.getJSON("@Url.Action("DropDownList", "RdDocument")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.rdDocumentCode,
                        text: data.rdDocumentNameTh
                    }).html(data.rdDocumentNameTh).appendTo("#tranSearchDocumentType");
            });
        })
    }

    function fnDropdownTransactionSearchDataSource() {

        $.getJSON("@Url.Action("DropDownList", "ProfileDataSource")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.dataSourceName,
                        text: data.dataSourceName
                    }).html(data.dataSourceName).appendTo("#tranSearchDataSource");
            });
        })
    }

    function fnDropdownTransactionSearchSellOrg() {

        $.getJSON("@Url.Action("DropDownListAll", "ProfileSellOrg")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.sellOrgCode,
                        text: data.sellOrgCode
                    }).html(data.sellOrgCode).appendTo("#tranSearchSellOrg");
            });
        })
    }

    function fnSearchTransaction(){

        var getBillingNo = $('#tranSearchBillingNo').val();
        var getStatus = $('#tranSearchStatus').val();
        var getIcO2c = $('#tranSearchIcOc').val();
        var getCustomerCode = $('#tranSearchCustomerCode').val();
        var getCompanyCode = $('#tranSearchCompanyCode').val();
        var getOutputType = $('#tranSearchOutputType').val();
        var getDocumentType = $('#tranSearchDocumentType').val();
        var getDateType = $('#tranSearchDateType').val();
        var getDateBetween = $('#tranSearchDateRang').val();
        var getDataSource = $('#tranSearchDataSource').val();
        var getSellOrg = $('#tranSearchSellOrg').val();


        var model = new Object();

        model.tranSearchBillingNo = getBillingNo;
        model.tranSearchStatus = getStatus;
        model.tranSearchIcO2c = getIcO2c;
        model.tranSearchCustomerCode = getCustomerCode;
        model.tranSearchCompanyCode = getCompanyCode;
        model.tranSearchOutputType = getOutputType;
        model.tranSearchDocumentType = getDocumentType;
        model.tranSearchDateType = getDateType;
        model.tranSearchDateBetween = getDateBetween;
        model.tranSearchDataSource = getDataSource
        model.tranSearchSellOrg = getSellOrg;

        var JsonString = JSON.stringify(model);



        var table = $('#tbTransactionMain').DataTable();

        table.ajax.reload();

        //RenderTransaction(JsonString);

    }


</script>