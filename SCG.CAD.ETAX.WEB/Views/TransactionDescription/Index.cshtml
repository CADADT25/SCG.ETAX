@{
    ViewData["Title"] = "Transaction Profile";
    Layout = null;
}
<style>
    .hovertext {
      position: relative;
    }
    .hovertext:before {
      content: attr(data-hover);
      visibility: hidden;
      opacity: 0;
      font-size: 14px;
      /*width: 140px;*/
      /*background-color: black;*/
      /*color: #fff;*/
      text-align: center;
      border-radius: 5px;
      padding: 5px 0;
      transition: opacity 1s ease-in-out;

      position: absolute;
      z-index: 1;
      top: -5px;
      right: 105%;
    }

    .hovertext:hover:before {
      opacity: 1;
      visibility: visible;
    }
    
    .hoversuccess{
        color: green;
    }
    .hoverfail{
        color: red;
    }
    .hoverwait{
        color: yellow;
    }
</style>
@await Html.PartialAsync("~/Views/transactionDescription/_Search.cshtml")


@await Html.PartialAsync("~/Views/transactionDescription/_Content.cshtml")

<script type="text/javascript">
    var _dataExchangeColumnList = null;
     $(document).ready(function () {

        $('#tranSearchStatus').select2();
        $('#tranSearchIcOc').select2();
        $('#tranSearchCompanyCode').select2();
        $('#tranSearchOutputType').select2();
        $('#tranSearchDocumentType').select2();
        $('#tranSearchDateType').select2();
        $('#tranSearchDataSource').select2();
        //$('#tranSearchSellOrg').select2();

        $("#tranSearchDateRang").flatpickr({
            mode: "range",
            altInput: true,
            dateFormat: "d-m-Y",
        });

        fnDropdownTransactionSearchCompanyCode();
        fnDropdownTransactionSearchDocumentType();
        fnDropdownTransactionSearchDataSource();
        //fnDropdownTransactionSearchSellOrg();

        RenderTransaction();

    });


    function RenderTransaction(){

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbTransactionMain").DataTable({

            //"scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 5,
            "scrollX": true,

            "ajax": {
                url: "@Url.Action("List", "transactionDescription")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    width: "2%",
                    render: function (data, type, full, meta){
                        return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                    //return '<input type="checkbox" name="id[]" value="' + row['transactionNo'] + '" onclick="fnGetValueCheckbox(this)">';}
                    //return '<input type="checkbox" name="id[]" value="' + row['transactionNo'] + '">';}
                },

                {
                    data: "billingNumber",
                    width: "10%",
                    render: function (data, type, row) {
                        return' '+ data.substr( 0, 100 ) +  ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] +');"> <i class="fas fa-eye text-primary"> </i> </a>';
                    }
                },
                {
                    data: "postingYear",
                    width: "5%",
                    render: function (data, type, row) {
                        return' '+ data.substr( 0, 100 ) +  ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] +');"> <i class="fas fa-pen text-primary"> </i> </a>';
                    }
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%"
                },
                {
                    data: "ic",
                    width: "5%",
                    render: function (data, type, row) {
                        return (data == "1") ? 'IC' : 'O2C';
                    }
                },
                {
                    data: "docType",
                    width: "5%"
                },
                {
                    data: "sourceName",
                    width: "5%"
                },
                {
                    data: "billingDate",
                    width: "15%",
                    render: function(data, type, row, meta) {
                            return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "processingDate",
                    width: "15%",
                    render: function(data, type, row, meta) {
                            return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "createDate",
                    width: "15%",
                    render: function(data, type, row, meta) {
                            return moment(data).format('DD-MM-YYYY');
                    }
                },
                {
                    data: "generateStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "printStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "emailSendStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlCompressStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfIndexingStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                }
                //{
                //    data: "generateStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "xmlSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "pdfSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "printStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "emailSendStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "xmlCompressStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "pdfIndexingStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //}
            ],
            //select: {
            //style:    'os',
            //selector: 'td:first-child'
        //},
        });




    }


    function fnCallBillingDetail(getPk){

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "TransactionDescription")",
            data: { id : getPk },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result);


                // Billing Date format
                var billingDate = new Date(data.BillingDate);

                let setBillingDate = billingDate;
                let monthBillingDate = (setBillingDate.getMonth() + 1).toString().padStart(2, '0');
                let dayBillingDate = setBillingDate.getDate().toString().padStart(2, '0');
                let yearBillingDate = setBillingDate.getFullYear();

                let newBillingDate = dayBillingDate+" - "+monthBillingDate+" - "+yearBillingDate;


                // Processing Date format

                var processingDate = new Date(data.BillingDate);

                let setProcessingDate = processingDate;

                let monthProcessingDate = (setProcessingDate.getMonth() + 1).toString().padStart(2, '0');
                let dayProcessingDate = setProcessingDate.getDate().toString().padStart(2, '0');
                let yearProcessingDate = setProcessingDate.getFullYear();

                let newProcessingDate = dayProcessingDate+" - "+monthProcessingDate+" - "+yearProcessingDate;


                $('#txtViewTransactionDecriptionBillingNo').text(data.BillingNumber);
                $('#txtViewTransactionDecriptionBillingDate').text(newBillingDate);
                $('#txtViewTransactionDecriptionProcessingDate').text(newProcessingDate);

                $('#txtViewTransactionDecriptionCompanyCode').text(data.CompanyCode);
                $('#txtViewTransactionDecriptionCustomerCode').text(data.CustomerId);
                $('#txtViewTransactionDecriptionCompanyName').text(data.CompanyName);
                $('#txtViewTransactionDecriptionCustomerName').text(data.CustomerName);

                $('#txtViewTransactionDecriptionSoldTo').text(data.SoldTo);
                $('#txtViewTransactionDecriptionShipTo').text(data.ShipTo);
                $('#txtViewTransactionDecriptionBillTo').text(data.BillTo);
                $('#txtViewTransactionDecriptionPayer').text(data.Payer);

                $('#txtViewTransactionDecriptionDocTypeCode').text(data.DocType);
                $('#txtViewTransactionDecriptionDataSource').text(data.SourceName);

                $('#txtViewTransactionDecriptionGenerateDetail').text(data.GenerateDetail);
                $('#txtViewTransactionDecriptionGenerateStatus').text(data.GenerateStatus);
                $('#txtViewTransactionDecriptionGenerateDateTime').text(data.GenerateDateTime);

                $('#txtViewTransactionDecriptionXmlSignDetail').text(data.XmlSignDetail);
                $('#txtViewTransactionDecriptionXmlSignStatus').text(data.XmlSignStatus);
                $('#txtViewTransactionDecriptionXmlSignDateTime').text(data.XmlSignDateTime);

                $('#txtViewTransactionDecriptionPdfSignDetail').text(data.PdfSignDetail);
                $('#txtViewTransactionDecriptionPdfSignStatus').text(data.PdfSignStatus);
                $('#txtViewTransactionDecriptionPdfSignDateTime').text(data.PdfSignDateTime);

                $('#txtViewTransactionDecriptionPrintDetail').text(data.PrintDetail);
                $('#txtViewTransactionDecriptionPrintStatus').text(data.PrintStatus);
                $('#txtViewTransactionDecriptionPrintDateTime').text(data.PrintDateTime);

                $('#txtViewTransactionDecriptionEmailSendDetail').text(data.EmailSendDetail);
                $('#txtViewTransactionDecriptionEmailSendStatus').text(data.EmailSendStatus);
                $('#txtViewTransactionDecriptionEmailSendDateTime').text(data.EmailSendDateTime);

                $('#txtViewTransactionDecriptionXmlCompressDetail').text(data.XmlCompressDetail);
                $('#txtViewTransactionDecriptionXmlCompressStatus').text(data.XmlCompressStatus);
                $('#txtViewTransactionDecriptionXmlCompressDateTime').text(data.XmlCompressDateTime);

                $('#txtViewTransactionDecriptionPdfIndexingDetail').text(data.PdfIndexingDetail);
                $('#txtViewTransactionDecriptionPdfIndexingStatus').text(data.PdfIndexingStatus);
                $('#txtViewTransactionDecriptionPdfIndexingDateTime').text(data.PdfIndexingDateTime);


                $('#txtViewTransactionDecriptionUpdateDate').text(data.UpdateDate);


                $("#modalViewTransactionDescription").modal('show');

            }
        });

    }

    function fnViewCancelTransactionDescription(){
        $("#modalViewTransactionDescription").modal('hide');
    }


    function fnDropdownTransactionSearchCompanyCode() {

        $.getJSON("@Url.Action("DropDownList", "ProfileCompany")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.companyCode,
                        text: data.companyCode
                    }).html(data.companyCode).appendTo("#tranSearchCompanyCode");
            });
        })
    }

    function fnDropdownTransactionSearchDocumentType() {

        $.getJSON("@Url.Action("DropDownList", "RdDocument")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.rdDocumentCode,
                        text: data.rdDocumentNameTh
                    }).html(data.rdDocumentNameTh).appendTo("#tranSearchDocumentType");
            });
        })
    }

    function fnDropdownTransactionSearchDataSource() {

        $.getJSON("@Url.Action("DropDownList", "ProfileDataSource")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.dataSourceName,
                        text: data.dataSourceName
                    }).html(data.dataSourceName).appendTo("#tranSearchDataSource");
            });
        })
    }

    function fnSearchTransaction(){

        var getBillingNo = $('#tranSearchBillingNo').val();
        var getStatus = $('#tranSearchStatus').val();
        var getIcO2c = $('#tranSearchIcOc').val();
        var getCustomerCode = $('#tranSearchCustomerCode').val();
        var getCompanyCode = $('#tranSearchCompanyCode').val();
        var getOutputType = $('#tranSearchOutputType').val();
        var getDocumentType = $('#tranSearchDocumentType').val();
        var getDateType = $('#tranSearchDateType').val();
        var getDateBetween = $('#tranSearchDateRang').val();
        var getDataSource = $('#tranSearchDataSource').val();

        var model = new Object();

        model.tranSearchBillingNo = getBillingNo;
        model.tranSearchStatus = getStatus;
        model.tranSearchIcO2c = getIcO2c;
        model.tranSearchCustomerCode = getCustomerCode;
        model.tranSearchCompanyCode = getCompanyCode;
        model.tranSearchOutputType = getOutputType;
        model.tranSearchDocumentType = getDocumentType;
        model.tranSearchDateType = getDateType;
        model.tranSearchDateBetween = getDateBetween;
        model.tranSearchDataSource = getDataSource
        //model.tranSearchSellOrg = getSellOrg;

        var JsonString = JSON.stringify(model);

        $('#tbTransactionMain').DataTable().destroy();

        $('#tbTransactionMain').DataTable({



            "scrollY": true,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "retrieve": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax":
                {
                    type: "GET",
                    url: "@Url.Action("Search", "transactionDescription")",
                    data: { transactionSearchJson : JsonString },
                    dataType: "json"
                },
                "columns": [

                {
                    width: "2%",
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },

                {
                    data: "billingNumber",
                    width: "15%",
                    render: function (data, type, row) {
                        return' '+ data.substr( 0, 100 ) +  ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] +');"> <i class="fas fa-eye text-primary"> </i> </a>';
                    }
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%",
                },
                {
                    data: "ic",
                    width: "5%",
                    render: function (data, type, row) {
                        return (data == "1") ? 'IC' : 'O2C';
                    }
                },
                {
                    data: "docType",
                    width: "5%",
                },
                {
                    data: "sourceName",
                    width: "5%",
                },
                {
                    data: "billingDate",
                    width: "5%",
                },
                {
                    data: "processingDate",
                    width: "5%",
                },
                {
                    data: "createDate",
                    width: "5%",
                },
                {
                    data: "generateStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfSignStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "printStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "emailSendStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "xmlCompressStatus",
                    width: "3%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                },
                {
                    data: "pdfIndexingStatus",
                    width: "2%",
                    render: function (data, type, row) {
                        return fnCheckStatus(data);
                    }
                }
                //{
                //    data: "generateStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "xmlSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "pdfSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "printStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "emailSendStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "xmlCompressStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //},
                //{
                //    data: "pdfIndexingStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return (data == "Successful") ? '<i class="text-success fas fa-paper-plane" />' :
                //        data == "Failed" ? '<i class="text-danger fas fa-circle-exclamation"/>' : '<i class="text-warning fas fa-clock" />';
                //    }
                //}
            ],

            select: {
                style:    'os',
                selector: 'td:first-child'
             },

             destroy : true

        }).ajax.reload();

        //RenderTransaction(JsonString);

    }
    
    function fnCheckStatus(status){
        if (status == "Successful"){
            return '<div class="text-success text-center icon-wrapper hovertext hoversuccess" data-hover="Successful"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></div>';
        }
        else if (status == "Failed"){
            return '<div class="text-danger text-center icon-wrapper hovertext hoverfail" data-hover="Failed"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg></div>';
        }
        else{
            return '<div class="text-warning text-center icon-wrapper hovertext hoverwait" data-hover="Watting"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clock"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg></div>';
        }
    }
    
    //function fnGetValueCheckbox(thisObj) {
    //    var dataExchangeCheckColumnVM = $('#tbTransactionMain').DataTable().row($(thisObj).parents('tr')).data();
    //    var dataExchangeCheckColumnList = $('#tbTransactionMain').DataTable().rows().data();
    //    for (var i = 0; i < dataExchangeCheckColumnList.length; i++) {
    //        if (dataExchangeCheckColumnList[i].FieldCaption !== null) {
    //            if (dataExchangeCheckColumnList[i].FieldCaption === dataExchangeCheckColumnVM.FieldCaption) {
    //                dataExchangeCheckColumnList[i].ColumnCheck = thisObj.checked;
    //            }
    //        }
    //    }
    //    _dataExchangeColumnList = dataExchangeCheckColumnList
    //    console.log('show checkbox');
    //    console.log(dataExchangeCheckColumnList);
    //    console.log(_dataExchangeColumnList);
    //}
</script>