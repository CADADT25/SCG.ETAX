@{
    ViewData["Title"] = "Product Unit Profile";
    Layout = null;
}


@await Html.PartialAsync("~/Views/ConfigXmlGenerator/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {


        var setCompanyCode = $("#companyCodeState").text();

        setTimeout(function(){
            RenderConfigXmlGenerator(setCompanyCode);
            fnDropdownConfigXmlGeneratorDataSource();
        }, 1200);

    });

    function ClearAllInsertXMLGEN(){
        
        setTimeout(function(){
            $('#ddlInsertConfigXmlGeneratorInputSource').val('').trigger('change');
        }, 1000);
        //setTimeout(function(){
        //    $('#ddlInsertConfigXmlGeneratorInputType').val('').trigger('change');
        //}, 1000);
        setTimeout(function(){
            $('#ddlInsertConfigXmlGeneratorOutputSource').val('').trigger('change');
        }, 1000);
        //setTimeout(function(){
        //    $('#ddlInsertConfigXmlGeneratorOutputType').val('').trigger('change');
        //}, 1000);
        
        document.getElementById('txtInsertConfigXmlGeneratorInputPath').value = '';
        document.getElementById('txtInsertConfigXmlGeneratorOutputPath').value = '';
        document.getElementById('txtInsertConfigXmlGeneratorOnlineRecordNumber').value = '';
        
        $('#ddlInsertConfigXmlGeneratorInputSource').prop('disabled', true)
        //$('#ddlInsertConfigXmlGeneratorInputType').prop('disabled', true)
        $('#txtInsertConfigXmlGeneratorInputPath').prop('disabled', true)
        $('#ddlInsertConfigXmlGeneratorOutputSource').prop('disabled', true)
        $('#ddlInsertConfigXmlGeneratorOutputType').prop('disabled', true)
        $('#txtInsertConfigXmlGeneratorOutputPath').prop('disabled', true)
        $('#txtInsertConfigXmlGeneratorOnlineRecordNumber').prop('disabled', true)
        
        $('#toggleInsertConfigXmlGeneratorIsBatch').prop('checked', false)
        $('#toggleInsertConfigXmlGeneratorIsOnline').prop('checked', false)
    }

    function fnDropdownConfigXmlGeneratorDataSource() {

            $.getJSON("@Url.Action("DropDownList", "ProfileDataSource")", function (data) {
                $.each(data, function (i, data) {
                    $('<option>',
                        {
                            value: data.dataSourceName,
                            text: data.dataSourceName
                        }).html(data.dataSourceName).appendTo("#ddlInsertConfigXmlGeneratorInputSource");

                    $('<option>',
                        {
                            value: data.dataSourceName,
                            text: data.dataSourceName
                        }).html(data.dataSourceName).appendTo("#ddlInsertConfigXmlGeneratorOutputSource");

                    $('<option>',
                        {
                            value: data.dataSourceName,
                            text: data.dataSourceName
                        }).html(data.dataSourceName).appendTo("#ddlUpdateConfigXmlGeneratorInputSource");
                    
                    $('<option>',
                        {
                            value: data.dataSourceName,
                            text: data.dataSourceName
                        }).html(data.dataSourceName).appendTo("#ddlUpdateConfigXmlGeneratorOutputSource");
                });
                 
            })
        }

    function onChangeBath(){
        $('#toggleInsertConfigXmlGeneratorIsBatch').prop('checked', true)
        $('#toggleInsertConfigXmlGeneratorIsOnline').prop('checked', false)


        $('#ddlInsertConfigXmlGeneratorInputSource').prop('disabled', false)
        //$('#ddlInsertConfigXmlGeneratorInputType').prop('disabled', false)
        $('#txtInsertConfigXmlGeneratorInputPath').prop('disabled', false)
        $('#ddlInsertConfigXmlGeneratorOutputSource').prop('disabled', false)
        //('#ddlInsertConfigXmlGeneratorOutputType').prop('disabled', false)
        $('#txtInsertConfigXmlGeneratorOutputPath').prop('disabled', false)

        $('#txtInsertConfigXmlGeneratorOnlineRecordNumber').prop('disabled', true)

    }

    function onChangeOnline(){

        $('#toggleInsertConfigXmlGeneratorIsOnline').prop('checked', true)
        $('#toggleInsertConfigXmlGeneratorIsBatch').prop('checked', false)

        $('#ddlInsertConfigXmlGeneratorInputSource').prop('disabled', true)
        //$('#ddlInsertConfigXmlGeneratorInputType').prop('disabled', true)
        $('#txtInsertConfigXmlGeneratorInputPath').prop('disabled', true)
        $('#ddlInsertConfigXmlGeneratorOutputSource').prop('disabled', true)
        //$('#ddlInsertConfigXmlGeneratorOutputType').prop('disabled', true)
        $('#txtInsertConfigXmlGeneratorOutputPath').prop('disabled', true)

        $('#txtInsertConfigXmlGeneratorOnlineRecordNumber').prop('disabled', false)

    }

    function onChangeBathUpdate(){
        $('#toggleUpdateConfigXmlGeneratorIsBatch').prop('checked', true)
        $('#toggleUpdateConfigXmlGeneratorIsOnline').prop('checked', false)


        $('#ddlUpdateConfigXmlGeneratorInputSource').prop('disabled', false)
        //$('#ddlUpdateConfigXmlGeneratorInputType').prop('disabled', false)
        $('#txtUpdateConfigXmlGeneratorInputPath').prop('disabled', false)
        $('#ddlUpdateConfigXmlGeneratorOutputSource').prop('disabled', false)
        //$('#ddlUpdateConfigXmlGeneratorOutputType').prop('disabled', false)
        $('#txtUpdateConfigXmlGeneratorOutputPath').prop('disabled', false)

        $('#txtUpdateConfigXmlGeneratorOnlineRecordNumber').prop('disabled', true)

    }

    function onChangeOnlineUpdate(){

        $('#toggleUpdateConfigXmlGeneratorIsOnline').prop('checked', true)
        $('#toggleUpdateConfigXmlGeneratorIsBatch').prop('checked', false)

        $('#ddlUpdateConfigXmlGeneratorInputSource').prop('disabled', true)
        //$('#ddlUpdateConfigXmlGeneratorInputType').prop('disabled', true)
        $('#txtUpdateConfigXmlGeneratorInputPath').prop('disabled', true)
        $('#ddlUpdateConfigXmlGeneratorOutputSource').prop('disabled', true)
        //$('#ddlUpdateConfigXmlGeneratorOutputType').prop('disabled', true)
        $('#txtUpdateConfigXmlGeneratorOutputPath').prop('disabled', true)

        $('#txtUpdateConfigXmlGeneratorOnlineRecordNumber').prop('disabled', false)

    }

    function RenderConfigXmlGenerator(setCompanyCode){

        if(setCompanyCode == null || setCompanyCode == ''){
            setCompanyCode = $("#companyCodeStateUpdate").text();
        }

        var table = $("#tbConfigXmlGeneratorMain").DataTable({
            destroy: true,
            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ConfigXmlGenerator")",
                type: "POST",
                data: { companyCode : setCompanyCode },
                datatype: "json"
            },


            "columns": [

                {
                    data: "configXmlGeneratorNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "ConfigXmlGeneratorNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "configXmlGeneratorInputSource",
                    width: "20%"
                },
                {
                    data: "configXmlGeneratorInputType",
                    width: "20%"
                },
                {
                    data: "configXmlGeneratorInputPath",
                    width: "10%"
                },
                {
                    data: "configXmlGeneratorOutputSource",
                    width: "20%"
                },
                {
                    data: "configXmlGeneratorOutputType",
                    width: "20%"
                },
                {
                    data: "configXmlGeneratorOutputPath",
                    width: "10%"
                },
                {
                    data: "configXmlGeneratorOnlineRecordNumber",
                    width: "10%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    orderable: false,
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/> </i>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();

        EditConfigXmlGenerator(table);
        DeleteConfigXmlGenerator(table);
    }


    function fnInsertCancelConfigXmlGenerator(){
        ClearAllInsertXMLGEN();
        $("#modalInsertConfigXmlGenerator").modal('hide');
    }

    function fnUpdateCancelConfigXmlGenerator(){

        $("#modalUpdateConfigXmlGenerator").modal('hide');
    }

    function callModalInsertConfigXmlGenerator(){

        var setCompanyCode = $("#companyCodeStateUpdate").text();

        if(setCompanyCode == null || setCompanyCode == ''){
            setCompanyCode = $("#companyCodeStateUpdate").text();

            if(setCompanyCode == null || setCompanyCode == ''){
                setCompanyCode = $("#companyCodeState").text();
            }   
        }

        document.getElementById('txtInsertConfigXmlGeneratorCompanyCode').value = setCompanyCode;

        //fnDropdownConfigXmlGeneratorDataSource();
        ClearAllInsertXMLGEN();
        $("#modalInsertConfigXmlGenerator").modal('show');
    }

     function fnInsertConfigXmlGenerator(){
        if ($('#txtInsertConfigXmlGeneratorCompanyCode').val() != '' && $('#txtInsertConfigXmlGeneratorInputSource').val() != '') {
            callConfigXmlGeneratorInsertController();
        }
        else {
            validateInsertConfigXmlGenerator();

            fnToastrInputDataFail();
        }
    }

    function fnUpdateConfigXmlGenerator(){
        if ($('#txtUpdateConfigXmlGeneratorCompanyCode').val() != '' && $('#txtUpdateConfigXmlGeneratorInputSource').val() != '') {
            callConfigXmlGeneratorUpdateController();
        }
        else {
            validateUpdateConfigXmlGenerator();

            fnToastrInputDataFail();
        }
    }

    function EditConfigXmlGenerator(table){

        $('#tbConfigXmlGeneratorMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callConfigXmlGeneratorGetDetailController(getPK);
        });
    }

    function DeleteConfigXmlGenerator(table){

        $('#tbConfigXmlGeneratorMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callConfigXmlGeneratorDeleteController(getPK);
                        callConfigXmlGeneratorIndex();
                      }
                    })
        });
    }

    function ExportConfigXmlGenerator(){

        $.blockUI();

        callConfigXmlGeneratorExportController();

        $.unblockUI();
    }


    // [Begin] Ajax call Controller

    function callConfigXmlGeneratorGetDetailController(getPK){

        
        //fnDropdownConfigXmlGeneratorDataSource();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ConfigXmlGenerator")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                document.getElementById('txtUpdateConfigXmlGeneratorNo').value = data.ConfigXmlGeneratorNo;
                document.getElementById('txtUpdateConfigXmlGeneratorCompanyCode').value = data.ConfigXmlGeneratorCompanyCode;
                document.getElementById('txtUpdateConfigXmlGeneratorInputPath').value = data.ConfigXmlGeneratorInputPath;
                document.getElementById('txtUpdateConfigXmlGeneratorOutputPath').value = data.ConfigXmlGeneratorOutputPath;
                document.getElementById('txtUpdateConfigXmlGeneratorOnlineRecordNumber').value = data.ConfigXmlGeneratorOnlineRecordNumber;

                


                if(data.ConfigXmlGeneratorOnlineRecordNumber == '' || data.ConfigXmlGeneratorOnlineRecordNumber == null){


                    document.getElementById("toggleUpdateConfigXmlGeneratorIsBatch").checked = true;
                    document.getElementById("toggleUpdateConfigXmlGeneratorIsOnline").checked = false;

                    $('#ddlUpdateConfigXmlGeneratorInputSource').prop('disabled', false)
                    //$('#ddlUpdateConfigXmlGeneratorInputType').prop('disabled', false)
                    $('#txtUpdateConfigXmlGeneratorInputPath').prop('disabled', false)
                    $('#ddlUpdateConfigXmlGeneratorOutputSource').prop('disabled', false)
                    //$('#ddlUpdateConfigXmlGeneratorOutputType').prop('disabled', false)
                    $('#txtUpdateConfigXmlGeneratorOutputPath').prop('disabled', false)

                }
                else{
                    document.getElementById("toggleUpdateConfigXmlGeneratorIsBatch").checked = false;
                    document.getElementById("toggleUpdateConfigXmlGeneratorIsOnline").checked = true;


                    $('#ddlUpdateConfigXmlGeneratorInputSource').prop('disabled', true)
                    //$('#ddlUpdateConfigXmlGeneratorInputType').prop('disabled', true)
                    $('#txtUpdateConfigXmlGeneratorInputPath').prop('disabled', true)
                    $('#ddlUpdateConfigXmlGeneratorOutputSource').prop('disabled', true)
                    //$('#ddlUpdateConfigXmlGeneratorOutputType').prop('disabled', true)
                    $('#txtUpdateConfigXmlGeneratorOutputPath').prop('disabled', true)
                }
                
                setTimeout(function(){
                    $('#ddlUpdateConfigXmlGeneratorInputSource').val(data.ConfigXmlGeneratorInputSource).trigger('change');
                }, 1000);
                //setTimeout(function(){
                //    $('#ddlUpdateConfigXmlGeneratorInputType').val(data.ConfigXmlGeneratorInputType).trigger('change');
                //}, 1000);
                setTimeout(function(){
                    $('#ddlUpdateConfigXmlGeneratorOutputSource').val(data.ConfigXmlGeneratorOutputSource).trigger('change');
                }, 1000);
                //setTimeout(function(){
                //    $('#ddlUpdateConfigXmlGeneratorOutputType').val(data.ConfigXmlGeneratorOutputType).trigger('change');
                //}, 1000);

                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateConfigXmlGeneratorIsActive").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateConfigXmlGeneratorIsActive").checked = false;
                }

                $("#modalUpdateConfigXmlGenerator").modal('show');

            }
        });
    }

    function callConfigXmlGeneratorInsertController(){

        var IsActive = 1;

        if($('#toggleInsertConfigXmlGeneratorIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.configXmlGeneratorCompanyCode = $('#txtInsertConfigXmlGeneratorCompanyCode').val();

        model.ConfigXmlGeneratorInputSource = $('#ddlInsertConfigXmlGeneratorInputSource').val();
        model.ConfigXmlGeneratorInputType = $('#ddlInsertConfigXmlGeneratorInputType').val();
        model.ConfigXmlGeneratorInputPath = $('#txtInsertConfigXmlGeneratorInputPath').val();
        model.ConfigXmlGeneratorOutputSource = $('#ddlInsertConfigXmlGeneratorOutputSource').val();
        model.ConfigXmlGeneratorOutputType = $('#ddlInsertConfigXmlGeneratorOutputType').val();
        model.ConfigXmlGeneratorOutputPath = $('#txtInsertConfigXmlGeneratorOutputPath').val();

        model.ConfigXmlGeneratorOnlineRecordNumber = $('#txtInsertConfigXmlGeneratorOnlineRecordNumber').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ConfigXmlGenerator")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    $("#modalInsertConfigXmlGenerator").modal('hide');

                    callConfigXmlGeneratorIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callConfigXmlGeneratorUpdateController(){

        var IsActive = 1;

        if($('#toggleUpdateConfigXmlGeneratorIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.ConfigXmlGeneratorNo = $('#txtUpdateConfigXmlGeneratorNo').val();
        model.configXmlGeneratorCompanyCode = $('#txtUpdateConfigXmlGeneratorCompanyCode').val();

        model.ConfigXmlGeneratorInputSource = $('#ddlUpdateConfigXmlGeneratorInputSource').val();
        model.ConfigXmlGeneratorInputType = $('#ddlUpdateConfigXmlGeneratorInputType').val();
        model.ConfigXmlGeneratorInputPath = $('#txtUpdateConfigXmlGeneratorInputPath').val();
        model.ConfigXmlGeneratorOutputSource = $('#ddlUpdateConfigXmlGeneratorOutputSource').val();
        model.ConfigXmlGeneratorOutputType = $('#ddlUpdateConfigXmlGeneratorOutputType').val();
        model.ConfigXmlGeneratorOutputPath = $('#txtUpdateConfigXmlGeneratorOutputPath').val();

        model.ConfigXmlGeneratorOnlineRecordNumber = $('#txtUpdateConfigXmlGeneratorOnlineRecordNumber').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ConfigXmlGenerator")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    $("#modalUpdateConfigXmlGenerator").modal('hide');

                    callConfigXmlGeneratorIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callConfigXmlGeneratorDeleteController(getPK){

        var model = new Object();

        model.ConfigXmlGeneratorNo = getPK;
        model.configXmlGeneratorCompanyCode = '';
        model.ConfigXmlGeneratorInputSource = '';
        model.ConfigXmlGeneratorInputType = '';
        model.ConfigXmlGeneratorInputPath = '';
        model.ConfigXmlGeneratorOutputSource = '';
        model.ConfigXmlGeneratorOutputType = '';
        model.ConfigXmlGeneratorOutputPath = '';
        model.ConfigXmlGeneratorOnlineRecordNumber = '';

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "ConfigXmlGenerator")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function () {
                    fnSweetAlert_DeleteSuccess();
                }
        });
    }

    function callConfigXmlGeneratorExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ConfigXmlGenerator")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ConfigXmlGenerator.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller




    function callConfigXmlGeneratorIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#render-configXmlGenerator-create").load("@Url.Action("Index", "ConfigXmlGenerator")");

            $("#render-configXmlGenerator-update").empty();
            $("#render-configXmlGenerator-update").load("@Url.Action("Index", "ConfigXmlGenerator")");
            $.unblockUI();
        }, 500);
    }


</script>






