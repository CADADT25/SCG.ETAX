@{
    Layout = null;
}
@model SCG.CAD.ETAX.MODEL.etaxModel.RequestRelateDataModel
<style>
    .step.active:before {
        background: linear-gradient(to right, green 0%, #73b5e8 100%);
    }
</style>
<div class="row">
    @if (Model.StatusCode == "wait_manager")
    {
        <div id="steps">
            <div class="step done" data-desc="Submit">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step active" data-desc="Wait Manager">2</div>
            <div class="step " data-desc="Wait Officer">3</div>
            <div class="step " data-desc="Complete">4</div>
        </div>
    }
    else if (Model.StatusCode == "wait_officer")
    {
        <div id="steps">
            <div class="step done" data-desc="Submit">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step done" data-desc="Wait Manager">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step active" data-desc="Wait Officer">3</div>
            <div class="step " data-desc="Complete">4</div>
        </div>
    }
    else if (Model.StatusCode == "complete")
    {
        <div id="steps">
            <div class="step done" data-desc="Submit">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step done" data-desc="Wait Manager">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step done" data-desc="Wait Officer">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
            <div class="step done" data-desc="Complete">
                <div class="icon-wrapper" style="margin-top: -5px;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                </div>
            </div>
        </div>
    }

</div>



<div class="row">
    <div class="col-xl-12 col-md-12 col-12">
        <div class="card invoice-preview-card" style="margin-bottom:unset;">
            <br />
            <div class="card-body invoice-padding pt-0">
                <div class="row invoice-spacing" style="margin-left: -1px;">
                    <div class="col-xl-8 p-0">
                        <h4 class="invoice-title">
                            Request No:
                            <span class="invoice-number"> #@Model.RequestNo</span>
                            <input type="hidden" id="requestNo" value="@Model.RequestNo" />
                            <input type="hidden" id="requestId" value="@Model.RequestId" />
                        </h4>
                        <br />
                        <h6 class="card-text mb-25"><b>Action : </b>@UtilityHelper.GetActionName(Model.RequestAction)</h6>
                        <h6 class="card-text mb-25"><b>Requester :</b>@Model.RequesterName (@Model.RequesterEmail)</h6>
                        <h6 class="card-text mb-25"><b>Request Data : </b>@Model.RequestDate.ToString("dd-MM-yyyy")</h6>
                        <h6 class="card-text mb-25"><b>Manager :</b> @Model.ManagerName (@Model.ManagerEmail)</h6>
                        <h6 class="card-text mb-25"><b>Status :</b> @UtilityHelper.GetStatusName(Model.StatusCode)</h6>

                    </div>
                    @if (Model.IsAuth)
                    {
                        <div class="col-xl-4 p-0 mt-xl-0 mt-2">
                            <br /><br />
                            <h6 class="card-text mb-25">Require Your Approval:</h6>
                            <button type="button" class="btn btn-gradient-primary" onclick="fnClickAction('@Model.RequestNo','approve','@Model.StatusCode')">Approve</button>
                            <button type="button" class="btn btn-gradient-danger" onclick="fnClickAction('@Model.RequestNo','reject','@Model.StatusCode')">Reject</button>
                        </div>
                    }

                </div>
            </div>

            <div class="card-body invoice-padding pt-0">
                <div class="row">
                    <div class="col-12">
                        <span class="fw-bold">Note:</span>
                        <span>
                            Emergency!
                        </span>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="fag-transaction" aria-labelledby="transaction" aria-expanded="true">
                <div class="collapse-margin collapse-icon mt-2" id="fag-transaction-qna">

                    <div class="card">
                        <div class="card-header" id="TabReset" data-toggle="collapse" role="button" data-target="#fag-transaction-two" aria-expanded="false" aria-controls="faq-payment-two">
                            <span class="lead collapse-title">Transaction</span>
                        </div>
                        <div id="fag-transaction-two" class="collapse show" aria-labelledby="TabReset" data-parent="#fag-transaction-qna">
                            <div class="card-body">
                                <div class="mb-0 table-responsive">
                                    <table class="table table-striped table-hover-animation table-hover" id="tbItemTransactionMain" style="font-size:12px;padding-bottom:15px;">
                                        <thead style="font-size:10px">
                                            <tr>
                                                <th style="font-size:10px">Billing No.</th>
                                                <th style="font-size:10px">Posting year</th>
                                                <th style="font-size:10px">Company</th>
                                                <th style="font-size:10px">Customer</th>
                                                <th style="font-size:10px">IC/O2C</th>
                                                <th style="font-size:10px">Document Type</th>
                                                <th style="font-size:10px">Data Source</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="fag-history" aria-labelledby="history" aria-expanded="true">
                <div class="collapse-margin collapse-icon mt-2" id="fag-history-qna">
                    <div class="card">
                        <div class="card-header" id="TabReset" data-toggle="collapse" role="button" data-target="#fag-history-two" aria-expanded="false" aria-controls="faq-payment-two">
                            <span class="lead collapse-title">History</span>
                        </div>
                        <div id="fag-history-two" class="collapse show" aria-labelledby="TabReset" data-parent="#fag-history-qna">
                            <div class="card-body">
                                <div class="mb-0 table-responsive">
                                    <table class="table table-striped table-hover-animation table-hover" id="tbHistoryMain" style="font-size:12px;padding-bottom:15px;">
                                        <thead style="font-size:10px">
                                            <tr>
                                                <th style="font-size:10px">User</th>
                                                <th style="font-size:10px">Action</th>
                                                <th style="font-size:10px">Date</th>
                                                <th style="font-size:10px">Reason</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">
    $(document).ready(function () {
        fnSearchRequestItem();
        fnSearchRequestHistory();
    });
    function fnSearchRequestHistory() {
        var table = $('#tbHistoryMain').DataTable();
        table.clear().draw();
        table.destroy();

        var getRequestId = $('#requestId').val();

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbHistoryMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 50,
            "scrollX": true,

            "ajax": {
                url: "@Url.Action("RequestHistory", "Request")",
                type: "POST",
                data: { jsonString: getRequestId },
                dataType: "json"
            },


            "columns": [
                {
                    data: "userName",
                    width: "5%"
                },
                {
                    data: "action",
                    width: "5%"
                },
                {
                    data: "createDate",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return moment(data).format('DD-MM-YYYY HH:mm');
                    }
                },
                {
                    data: "reason",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return data != null ? data : ""
                    }
                }
            ]
        });
    }


    function fnSearchRequestItem() {
        var table = $('#tbItemTransactionMain').DataTable();
        table.clear().draw();
        table.destroy();
        var getRequestNo = $('#requestNo').val();

        $('[data-toggle="tooltip"]').tooltip();

        var table = $("#tbItemTransactionMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,
            "scrollX": true,

            "ajax": {
                url: "@Url.Action("RequestItem", "Request")",
                type: "POST",
                data: { jsonString: getRequestNo },
                dataType: "json"
            },


            "columns": [


                {
                    data: "billingNumber",
                    width: "10%",
                    //render: function (data, type, row) {
                    //    return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-eye text-primary"> </i> </a>';
                    //}
                },
                {
                    data: "postingYear",
                    width: "5%",
                    //render: function (data, type, row) {
                    //    return ' ' + data.substr(0, 100) + ' <a onclick="fnCallBillingDetail(' + row['transactionNo'] + ');"> <i class="fas fa-pen text-primary"> </i> </a>';
                    //}
                },
                {
                    data: "companyCode",
                    width: "5%"
                },
                {
                    data: "customerId",
                    width: "5%"
                },
                {
                    data: "ic",
                    width: "5%",
                    render: function (data, type, row) {
                        return (data == "1") ? 'IC' : 'O2C';
                    }
                },
                {
                    data: "docType",
                    width: "5%"
                },
                {
                    data: "sourceName",
                    width: "5%"
                },
                //{
                //    data: "billingDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "processingDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "createDate",
                //    width: "10%",
                //    className: "text-center",
                //    render: function (data, type, row, meta) {
                //        return moment(data).format('DD-MM-YYYY');
                //    }
                //},
                //{
                //    data: "generateStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "xmlSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "pdfSignStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "printStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "emailSendStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "xmlCompressStatus",
                //    width: "3%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //},
                //{
                //    data: "pdfIndexingStatus",
                //    width: "2%",
                //    render: function (data, type, row) {
                //        return fnCheckStatus(data);
                //    }
                //}
            ]
        });
    }

    function fnCheckStatus(status) {
        if (status == "Successful") {
            return '<div class="text-success text-center icon-wrapper hovertext hoversuccess" data-hover="Successful"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></div>';
        }
        else if (status == "Failed") {
            return '<div class="text-danger text-center icon-wrapper hovertext hoverfail" data-hover="Failed"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg></div>';
        }
        else {
            return '<div class="text-warning text-center icon-wrapper hovertext hoverwait" data-hover="Watting"><svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clock"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg></div>';
        }
    }

    function fnClickAction(no, act, sta) {
        var re_act = "";
        if (sta == "wait_manager") {
            re_act = "manager_" + act;
        } else if (sta == "wait_officer") {
            re_act = "officer_" + act;
        }
        fnActionRequest(no, re_act, sta, act);
    }

    function fnActionRequest(no, act, sta, txt) {
        Swal.fire({
            title: 'Are you sure to ' + txt + '?',
            //text: "" + datas,
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes',
            confirmButtonClass: 'btn btn-primary',
            cancelButtonClass: 'btn btn-danger ml-1',
            buttonsStyling: false,
        }).then(function (result) {
            if (result.isConfirmed) {
                $.blockUI();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Action", "RequestAction")",
                    data: { jsonString: no, action: act, status: sta },
                    dataType: "text",
                    success: function (res) {
                        var ret = $.parseJSON(res);
                        if (ret.status) {
                            fnAfterActionRequestSuccess(no);
                        }
                        else {
                            fnSweetAlert_Error(ret.erroR_MESSAGE);
                        }
                        $.unblockUI();
                    }
                });
            }
        });
    }

    function fnAfterActionRequestSuccess(no) {
        Swal.fire({
            title: 'Good job!',
            text: 'Your has been saved!',
            icon: 'success',
            showCancelButton: false,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ok',
            confirmButtonClass: 'btn btn-primary',
            cancelButtonClass: 'btn btn-danger ml-1',
            buttonsStyling: false,
        }).then(function (result) {
            if (result.isConfirmed) {
                fnRenderViewRequest(no)
            }
        });
    }
</script>