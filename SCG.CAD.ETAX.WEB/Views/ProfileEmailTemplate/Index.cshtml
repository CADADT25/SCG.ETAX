@{
    ViewData["Title"] = "ProfileEmailTemplate";
    Layout = null;
}


<link rel="stylesheet" type="text/css" href="~/assets/summernote/summernote.min.css">

<script src="~/assets/summernote/summernote.min.js"></script>

@await Html.PartialAsync("~/Views/ProfileEmailTemplate/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {

        $('#txtInsertProfileEmailTemplateEmailBody').summernote();
        $('#txtUpdateProfileEmailTemplateEmailBody').summernote();

        RenderProfileEmailTemplate();

    });


    $(window).on('load', function() {

        $('#modalCreateProfileEmailTemplate').select2({
            dropdownParent: $('#modalCreateProfileEmailTemplate')
        });


        $('#modalUpdateProfileEmailTemplate').select2({
            dropdownParent: $('#modalUpdateProfileEmailTemplate')
        });

        $('#txtInsertProfileEmailTemplateEmailBody').summernote();
        $('#txtUpdateProfileEmailTemplateEmailBody').summernote();

    });


    function RenderProfileEmailTemplate(){

        var table = $("#tbProfileEmailTemplateMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProfileEmailTemplate")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "emailTemplateNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    className: "text-center",
                    width: "5%",
                    visible: false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "emailTypeNo",
                    width: "20%",
                    visible : false
                },
                {
                    data: "emailSubject",
                    width: "20%"
                },
                {
                    data: "emailTemplateNo",
                    width: "20%",
                    render: function (data, type, row) {
                        return'<i class="text-success fa fa-envelope"/> </i> <a onclick="fnGetPreviewEmailTemplate(' + data +');"> READ </a>';
                    }
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center text-center text-primary",
                    //defaultContent: '<i class="pointer fas fa-pen"/>',
                    createdCell: function (td, cellData, rowData, row, col) {
                      if ('@ViewBag.showUPDATE'.toUpperCase() == 'TRUE') {
                        $(td).addClass('editor-edit');
                      }
                    },
                    render: function (data, type, row) {
                        if ('@ViewBag.showUPDATE'.toUpperCase() == 'TRUE'){
                            return '<i class="pointer fas fa-pen"/>';
                        }
                        return '';
                    },
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditProfileEmailTemplate(table);
        //DeleteProfileEmailTemplate(table);
    }

    function fnGetPreviewEmailTemplate(data){

        $("#modalGetProfileEmailTemplate").modal('show');
        $("#previewData").empty();

        //$("#previewData").append("<b>Appended text</b> <br> <b>testt</b> aaaaa helooooo");

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileEmailTemplate")",
            data: { id : data },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                $("#previewData").append(data.EmailBody);

            }
        });
    }


    function fnClosePreviewEmailTemplate(){
        $("#modalGetProfileEmailTemplate").modal('hide');
    }

    function fnDropdownProfileEmailTemplate() {

        $('<option>',
        {
            value: 0,
        }).html("--- Select Email Type ---").appendTo("#ddlInsertProfileEmailTemplateEmailTypeNo");


        $.getJSON("@Url.Action("DropDownList", "ProfileEmailType")", function (data) {

            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.emailTypeCode,
                        text: data.emailTypeCode
                    }).html(data.emailTypeCode +' (' + data.emailTypeName + ')' ).appendTo("#ddlInsertProfileEmailTemplateEmailTypeNo");
            });

            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.emailTypeCode,
                        text: data.emailTypeCode
                    }).html(data.emailTypeCode +' (' + data.emailTypeName + ')' ).appendTo("#ddlUpdateProfileEmailTemplateEmailTypeNo");
            });
        })

    }



    function fnInsertCancelProfileEmailTemplate(){

            $("#ddlInsertProfileEmailTemplateEmailTypeNo").empty();
            document.getElementById('txtInsertProfileEmailTemplateEmailBody').value = '';

            $("#modalCreateProfileEmailTemplate").modal('hide');
    }

    function fnUpdateCancelProfileEmailTemplate(){

            $("#ddlUpdateProfileEmailTemplateEmailTypeNo").empty();
            document.getElementById('txtUpdateProfileEmailTemplateEmailBody').value = '';

            $("#modalUpdateProfileEmailTemplate").modal('hide');
    }

    function callModalInsertProfileEmailTemplate(){

        fnDropdownProfileEmailTemplate();

        $("#modalCreateProfileEmailTemplate").modal('show');

    }

    function fnInsertProfileEmailTemplate(){

        var EmailType = $('#ddlInsertProfileEmailTemplateEmailTypeNo').val();

        if (
            EmailType != '0' &&
            $('#txtInsertProfileEmailTemplateEmailBody').val() != ''
            )
        {
            callProfileEmailTemplateInsertController();
        }
        else {
            fnToastrInputDataFail();
        }
        callProfileEmailTemplateIndex();
    }

    function fnUpdateProfileEmailTemplate(){

        var EmailType = $('#ddlUpdateProfileEmailTemplateEmailTypeNo').val();

        if (
            EmailType != '0' &&
            $('#txtUpdateProfileEmailTemplateEmailBody').val() != ''
            )
        {
            callProfileEmailTemplateUpdateController();
        }
        else {
            fnToastrInputDataFail();
        }
        callProfileEmailTemplateIndex();
    }

    function EditProfileEmailTemplate(table){

        $('#tbProfileEmailTemplateMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            fnDropdownProfileEmailTemplate();

            callProfileEmailTemplateGetDetailController(getPK);

        });
    }


    function ExportProfileEmailTemplate(){

        $.blockUI();

        callProfileEmailTemplateExportController();

        $.unblockUI();
    }



    // [Begin] Ajax call Controller

    function callProfileEmailTemplateGetDetailController(getPK){


        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileEmailTemplate")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                document.getElementById('txtUpdateProfileEmailTemplateNo').value = data.EmailTemplateNo;

                document.getElementById('ddlUpdateProfileEmailTemplateEmailTypeNo').value = data.EmailTypeNo;

                $('#txtUpdateProfileEmailTemplateEmailBody').summernote('code', data.EmailBody);

                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateProfileEmailTemplate").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateProfileEmailTemplate").checked = false;
                }

                $("#modalUpdateProfileEmailTemplate").modal('show');

            }
        });
    }

    function callProfileEmailTemplateInsertController(){

        var IsActive = ($('#toggleInsertProfileEmailTemplate').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.EmailTypeNo = $('#ddlInsertProfileEmailTemplateEmailTypeNo').val();
        model.EmailBody = $('#txtInsertProfileEmailTemplateEmailBody').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProfileEmailTemplate")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalCreateProfileEmailTemplate").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileEmailTemplateIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callProfileEmailTemplateUpdateController(){

        var IsActive = ($('#toggleUpdateProfileEmailTemplate').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.EmailTemplateNo = $('#txtUpdateProfileEmailTemplateNo').val();
        model.EmailTypeNo = $('#ddlUpdateProfileEmailTemplateEmailTypeNo').val();
        model.EmailBody = $('#txtUpdateProfileEmailTemplateEmailBody').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProfileEmailTemplate")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalUpdateProfileEmailTemplate").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileEmailTemplateIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callProfileEmailTemplateExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ProfileEmailTemplate")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ProfileEmailTemplate.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller




    function callProfileEmailTemplateIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ProfileEmailTemplate")");
            $.unblockUI();
        }, 500);
    }






</script>