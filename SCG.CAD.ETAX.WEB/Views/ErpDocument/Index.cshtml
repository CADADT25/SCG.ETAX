@{
    ViewData["Title"] = " ErpDocument ";
    Layout = null;  
}

@await Html.PartialAsync("~/Views/ErpDocument/_Content.cshtml")

<script type="text/javascript">

     $(document).ready(function () {

        RenderErpDocument();

         $('#toggleUpdateErpDocument').change(function() {
            $('#toggleUpdateErpDocument-event').html('Toggle: ' + $(this).prop('checked'))
        });

    });


    function RenderErpDocument(){

        var table = $("#tbErpDocumentMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ErpDocument")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "erpDocumentNo",
                    className: "text-center",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "erpDocumentCode",
                    orderable: true
                },
                {
                    data: "erpDocumentNameTh",
                    orderable: true
                },
                {
                    data: "erpDocumentNameEn",
                    orderable: true
                },
                {
                    data: "isactive",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
                //{
                //    data: null,
                //    className: "dt-center editor-delete text-center text-danger",
                //    defaultContent: '<i class="pointer fas fa-trash"/>',
                //    orderable: false,
                //    width: "2%"
                //}
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditErpDocument(table);
        DeleteErpDocument(table);
    }


    function fnInsertCancelErpDocument(){

            document.getElementById('txtInsertErpDocumentCode').value = '';
            document.getElementById('txtInsertErpDocumentNameTh').value = '';
            document.getElementById('txtInsertErpDocumentNameEn').value = '';

            $("#modalCreateErpDocument").modal('hide');
    }

    function fnUpdateCancelErpDocument(){

            document.getElementById('txtUpdateErpDocumentCode').value = '';
            document.getElementById('txtUpdateErpDocumentNameTh').value = '';
            document.getElementById('txtUpdateErpDocumentNameEn').value = '';

            $("#modalUpdateErpDocument").modal('hide');
    }

    function callModalInsertErpDocument(){

        $("#modalCreateErpDocument").modal('show');

    }

    function fnInsertErpDocument(){

        if ( $('#txtInsertErpDocumentCode').val() != '')
        {
            callErpDocumentInsertController();
        }
        else {
            validateInsertErpDocument();
            fnToastrInputDataFail();
        }
    }

    function fnUpdateErpDocument(){

        if ($('#txtUpdateErpDocumentCode').val() != '') {
            callErpDocumentUpdateController();
        }
        else {
            validateUpdateErpDocument();
            fnToastrInputDataFail();
        }
    }

    function EditErpDocument(table){

        $('#tbErpDocumentMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callErpDocumentGetDetailController(getPK);

        });
    }

    function DeleteErpDocument(table){

        $('#tbErpDocumentMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callErpDocumentDeleteController(getPK);
                        callErpDocumentIndex();
                      }
                    })
        });
    }

    function ExportErpDocument(){

        $.blockUI();

        callErpDocumentExportController();

        $.unblockUI();
    }



    // [Begin] Ajax call Controller

    function callErpDocumentGetDetailController(getPK){
        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ErpDocument")",
            data: { id : getPK },
            //contentType: 'application/json; charset=utf-8',
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                document.getElementById('txtUpdateErpDocumentNo').value = data.ErpDocumentNo;
                document.getElementById('txtUpdateErpDocumentCode').value = data.ErpDocumentCode;
                document.getElementById('txtUpdateErpDocumentNameTh').value = data.ErpDocumentNameTh;
                document.getElementById('txtUpdateErpDocumentNameEn').value = data.ErpDocumentNameEn;

                if(data.Isactive == 1){
                    $('#toggleUpdateErpDocument').bootstrapToggle('on');
                }
                else{
                    $('#toggleUpdateErpDocument').bootstrapToggle('off');
                }

                $("#modalUpdateErpDocument").modal('show');

            }
        });
    }

    function callErpDocumentInsertController(){

        var IsActive = 1;

        if($('#toggleInsertErpDocument').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.ErpDocumentCode = $('#txtInsertErpDocumentCode').val();
        model.ErpDocumentNameTh = $('#txtInsertErpDocumentNameTh').val();
        model.ErpDocumentNameEn = $('#txtInsertErpDocumentNameEn').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ErpDocument")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                JSON.parse(resp);

                if(resp.status = true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtInsertErpDocumentCode').value = '';
                    document.getElementById('txtInsertErpDocumentNameTh').value = '';
                    document.getElementById('txtInsertErpDocumentNameEn').value = '';

                    $("#modalCreateErpDocument").modal('hide');
                    callErpDocumentIndex();

                }
                else{
                    fnSweetAlert_Error(resp.error_message);
                }

            }
        });
    }

    function callErpDocumentUpdateController(){

        var IsActive = 1;

        var getToggle = $('#toggleUpdateErpDocument-event').text();

        if(getToggle.includes("true")){
            IsActive = 1;
        }
        else
        {
            IsActive = 0;
        }

        var model = new Object();

        model.ErpDocumentNo = $('#txtUpdateErpDocumentNo').val();
        model.ErpDocumentCode = $('#txtUpdateErpDocumentCode').val();
        model.ErpDocumentNameTh = $('#txtUpdateErpDocumentNameTh').val();
        model.ErpDocumentNameEn = $('#txtUpdateErpDocumentNameEn').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ErpDocument")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                JSON.parse(resp);

                if(resp.status = true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtUpdateErpDocumentCode').value = '';
                    document.getElementById('txtUpdateErpDocumentNameTh').value = '';
                    document.getElementById('txtUpdateErpDocumentNameEn').value = '';

                    $("#modalUpdateErpDocument").modal('hide');

                    callErpDocumentIndex();
                }
                else{
                    fnSweetAlert_Error(resp.error_message);
                }
            }
        });
    }

    function callErpDocumentDeleteController(getPK){

        var model = new Object();


        model.ErpDocumentNo = getPK;
        model.ErpDocumentCode = "";
        model.ErpDocumentNameTh = "";
        model.ErpDocumentNameEn = "";
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "ErpDocument")",
            data: { jsonString : getJsonString },
            //contentType: "application/json; charset=utf-8",
            dataType: "text",
            success: function () {

                    fnSweetAlert_DeleteSuccess();


                }
        });
    }

    function callErpDocumentExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ErpDocument")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ErpDocument.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller




    function callErpDocumentIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ErpDocument")");
            $.unblockUI();
        }, 500);
    }






</script>