@{
    ViewData["Title"] = "Profile DataSource Profile";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ProfileDataSource/_Content.cshtml")

<script type="text/javascript">

     $(document).ready(function () {

        RenderDataSource();
    });

    
    function createProfileDataSource(){

        $("#contentPartial").load("@Url.Action("_Create", "ManagementDocumentProfile")");

    }

    function RenderDataSource(){

        var table = $("#tbDataSourceMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProfileDataSource")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "dataSourceNo",
                    className: "text-center",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "dataSourceName",
                    orderable: true
                },
                {
                    data: "dataSourceDescription",
                    orderable: true
                },
                {
                    data: "isactive",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditDataSource(table);
        DeleteDataSource(table);
    }


    function fnInsertCancelDataSource(){

            document.getElementById('txtInsertDataSourceName').value = '';
            document.getElementById('txtInsertDataSourceDescription').value = '';
    }

    function fnUpdateCancelDataSource(){

            document.getElementById('txtUpdateDataSourceName').value = '';
            document.getElementById('txtUpdateDataSourceDescription').value = '';
    }

    function fnInsertDataSource(){

        if ( $('#txtInsertDataSourceName').val() != '')
        {
            callDataSourceInsertController();
        }
        else {
            fnToastrInputDataFail();
            validateInsertDataSource();
        }
    }

    function fnUpdateDataSource(){

        if ($('#txtUpdateDataSourceName').val() != '') {
            callDataSourceUpdateController();
        }
        else {
            fnToastrInputDataFail();
            validateUpdateDataSource();
        }
    }

    function EditDataSource(table){

        $('#tbDataSourceMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];
            var getDocumentCode = data[Object.keys(data)[1]];

            $('#dataSourceStateUpdate').text(getDocumentCode);

            callDataSourceGetDetailController(getPK);

        });
    }

    function DeleteDataSource(table){

        $('#tbDataSourceMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callDataSourceDeleteController(getPK);
                        callDataSourceIndex();
                      }
                    })
        });
    }

    function ExportDataSource(){

        $.blockUI();

        callDataSourceExportController();

        $.unblockUI();
    }


    function updateDocumentProfile(){

        $("#contentPartial").load("@Url.Action("_Update", "ManagementDocumentProfile")");

    }

    // [Begin] Ajax call Controller

    function callDataSourceGetDetailController(getPK){

        updateDocumentProfile();

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileDataSource")",
            data: { id : getPK },
            //contentType: 'application/json; charset=utf-8',
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                document.getElementById('txtUpdateDataSourceNo').value = data.DataSourceNo;
                document.getElementById('txtUpdateDataSourceName').value = data.DataSourceName;
                document.getElementById('txtUpdateDataSourceDescription').value = data.DataSourceDescription;

                $('#dataSourceStateUpdate').text(data.DataSourceName);

                if(data.Isactive == 1){
                    $('#toggleUpdateDataSource').bootstrapToggle('on');
                }
                else{
                    $('#toggleUpdateDataSource').bootstrapToggle('off');
                }

                $("#modalUpdateDataSource").modal('show');

            }
        });
    }

    function callDataSourceInsertController(){

        var IsActive = 1;

        if($('#toggleInsertDataSourceIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.DataSourceName = $('#txtInsertDataSourceName').val();
        model.DataSourceDescription = $('#txtInsertDataSourceDescription').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProfileDataSource")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                JSON.parse(resp);

                if(resp.status = true){

                    fnSweetAlert_SaveSuccess();

                    $("#txtInsertDataSourceName").prop('disabled', true);
                    $("#txtInsertDataSourceDescription").prop('disabled', true);

                    document.getElementById("actionSaveProfleDataSource").hidden = true;
                    document.getElementById("toggleInsertDataSourceIsActive").disabled = true;


                    $("#render-DocumentCode-create").load("@Url.Action("Index", "DocumentCode")");
                    $("#render-ProfileReasonIssue-create").load("@Url.Action("Index", "ProfileReasonIssue")");
                    $("#render-TaxCode-create").load("@Url.Action("Index", "TaxCode")");
                    $("#render-ProductUnit-create").load("@Url.Action("Index", "ProductUnit")");

                    $('#dataSourceState').text($("#txtInsertDataSourceName").val());


                }
                else{
                    fnSweetAlert_Error(resp.error_message);
                }

            }
        });
    }

    function callDataSourceUpdateController(){

        var IsActive = 1;

        var getToggle = $('#toggleUpdateDataSource-event').text();

        if(getToggle.includes("true")){
            IsActive = 1;
        }
        else
        {
            IsActive = 0;
        }

        var model = new Object();

        model.DataSourceNo = $('#txtUpdateDataSourceNo').val();
        model.DataSourceName = $('#txtUpdateDataSourceName').val();
        model.DataSourceDescription = $('#txtUpdateDataSourceDescription').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProfileDataSource")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                JSON.parse(resp);

                if(resp.status = true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtUpdateDataSourceName').value = '';

                    document.getElementById('txtUpdateDataSourceDescription').value = '';

                    $("#modalUpdateDataSource").modal('hide').on('hidden.bs.modal', functionThatEndsUpDestroyingTheDOM);

                 callDataSourceIndex();

                }
                else{
                    fnSweetAlert_Error(resp.error_message);
                }
            }
        });
    }

    function callDataSourceDeleteController(getPK){

        var model = new Object();

        model.DataSourceNo = getPK;
        model.DataSourceName = "";
        model.DataSourceDescription = "";
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "ProfileDataSource")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function () {

                    fnSweetAlert_DeleteSuccess();


                }
        });
    }

    function callDataSourceExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ProfileDataSource")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-DataSource.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller


    
    function callDataSourceIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ProfileDataSource")");
            $.unblockUI();
        }, 0);
    }






</script>