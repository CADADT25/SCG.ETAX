@{
    ViewData["Title"] = "Product Unit Profile";
    Layout = null;
}


@await Html.PartialAsync("~/Views/ProductUnit/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {

        var setDataSourceStateUpdate = $("#dataSourceStateUpdate").text();

        setTimeout(function(){
            RenderProductUnit(setDataSourceStateUpdate);
        }, 1200);

    });

    function RenderProductUnit(setDataSourceStateUpdate){

        if(setDataSourceStateUpdate == null || setDataSourceStateUpdate == ''){
            setDataSourceStateUpdate = $("#dataSourceStateUpdate").text();

            if(setDataSourceStateUpdate == null || setDataSourceStateUpdate == ''){
                setDataSourceStateUpdate = $("#dataSourceState").text();
            }
        }

        var table = $("#tbProductUnitMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProductUnit")",
                type: "POST",
                data: { dataSource : setDataSourceStateUpdate },
                datatype: "json"
            },


            "columns": [

                {
                    data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    visible: false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "erpSource",
                    width: "20%"
                },
                {
                    data: "productUnitErp",
                    width: "20%"
                },
                {
                    data: "productUnitRd",
                    width: "20%"
                },
                {
                    data: "productUnitDescription",
                    width: "10%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    orderable: false,
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/> </i>',
                    orderable: false,
                    width: "2%"
                }
                //{
                //    data: null,
                //    className: "dt-center editor-delete text-center text-danger",
                //    defaultContent: '<i class="pointer fas fa-trash"/>',
                //    orderable: false,
                //    width: "2%"
                //}
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();

        EditProductUnit(table);
        DeleteProductUnit(table);
    }


    function fnInsertCancelProductUnit(){

        document.getElementById('txtInsertProductUnitSource').value = '';
        document.getElementById('txtInsertProductUnitErp').value = '';
        document.getElementById('txtInsertProductUnitRd').value = '';
        document.getElementById('txtInsertProductUnitDescription').value = '';

        $("#modalProductUnit").modal('hide');
    }

    function fnUpdateCancelProductUnit(){

        document.getElementById('txtUpdateProductUnitSource').value = '';
        document.getElementById('txtUpdateProductUnitErp').value = '';
        document.getElementById('txtUpdateProductUnitRd').value = '';
        document.getElementById('txtUpdateProductUnitDescription').value = '';

        $("#modalUpdateProductUnit").modal('hide');
    }

    function callModalInsertProductUnit(){

        var setDataSource = $("#dataSourceStateUpdate").text();

        if(setDataSource == null || setDataSource == ''){
            setDataSource = $("#dataSourceStateUpdate").text();

            if(setDataSource == null || setDataSource == ''){
                setDataSource = $("#dataSourceState").text();
            }
        }

        document.getElementById('txtInsertProductUnitSource').value = setDataSource;

        $("#modalProductUnit").modal('show');
    }

     function fnInsertProductUnit(){
        if ($('#txtInsertProductUnitErp').val() != '' && $('#txtInsertProductUnitRd').val() != '') {
            callProductUnitInsertController();
        }
        else {
            validateInsertProductUnit();

            fnToastrInputDataFail();
        }
    }

    function fnUpdateProductUnit(){
        if ($('#txtUpdateProductUnitErp').val() != '' && $('#txtUpdateProductUnitRd').val() != '') {
            callProductUnitUpdateController();
        }
        else {
            validateUpdateProductUnit();

            fnToastrInputDataFail();
        }
    }

    function EditProductUnit(table){

        $('#tbProductUnitMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callProductUnitGetDetailController(getPK);
        });
    }

    function DeleteProductUnit(table){

        $('#tbProductUnitMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callProductUnitDeleteController(getPK);
                        callProductUnitIndex();
                      }
                    })
        });
    }

    function ExportProductUnit(){

        $.blockUI();

        callProductUnitExportController();

        $.unblockUI();
    }


    // [Begin] Ajax call Controller

    function callProductUnitGetDetailController(getPK){
        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProductUnit")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateProductUnitNo').value = data.ProductUnitNo;
                document.getElementById('txtUpdateProductUnitSource').value = data.ErpSource;
                document.getElementById('txtUpdateProductUnitErp').value = data.ProductUnitErp;
                document.getElementById('txtUpdateProductUnitRd').value = data.ProductUnitRd;
                document.getElementById('txtUpdatetProductUnitDescription').value = data.ProductUnitDescription;


                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateProductUnitIsActive").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateProductUnitIsActive").checked = false;
                }

                $("#modalUpdateProductUnit").modal('show');

            }
        });
    }

    function callProductUnitInsertController(){

       var IsActive = 1;

        if($('#toggleInsertProductUnitIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;


        }

        var model = new Object();

        model.ErpSource = $('#txtInsertProductUnitSource').val();
        model.ProductUnitErp = $('#txtInsertProductUnitErp').val();
        model.ProductUnitRd = $('#txtInsertProductUnitRd').val();
        model.ProductUnitDescription = $('#txtInsertProductUnitDescription').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProductUnit")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtInsertProductUnitErp').value = '';
                    document.getElementById('txtInsertProductUnitRd').value = '';
                    document.getElementById('txtInsertProductUnitDescription').value = '';

                    $("#modalProductUnit").modal('hide');

                    callProductUnitIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callProductUnitUpdateController(){

        var IsActive = 1;

        if($('#toggleUpdateProductUnitIsActive').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.ProductUnitNo = $('#txtUpdateProductUnitNo').val();
        model.ErpSource = $('#txtUpdateProductUnitSource').val();
        model.ProductUnitErp = $('#txtUpdateProductUnitErp').val();
        model.ProductUnitRd = $('#txtUpdateProductUnitRd').val();
        model.ProductUnitDescription = $('#txtUpdatetProductUnitDescription').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProductUnit")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtUpdateProductUnitErp').value = '';
                    document.getElementById('txtUpdateProductUnitRd').value = '';
                    document.getElementById('txtUpdatetProductUnitDescription').value = '';

                    $("#modalUpdateProductUnit").modal('hide');

                    callProductUnitIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }

    function callProductUnitDeleteController(getPK){

        var model = new Object();

        model.ProductUnitNo = getPK;
        model.ProductUnitErp = "";
        model.ProductUnitRd = "";
        model.ProductUnitDescription = "";
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "ProductUnit")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function () {
                    fnSweetAlert_DeleteSuccess();
                }
        });
    }

    function callProductUnitExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ProductUnit")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ProductUnit.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller




    function callProductUnitIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#render-ProductUnit-create").load("@Url.Action("Index", "ProductUnit")");
            $.unblockUI();
        }, 500);
    }


</script>






