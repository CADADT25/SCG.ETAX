@{
    ViewData["Title"] = "Revenue Document Profile";
    Layout = null;
}

<div class="section-header">
    <h1>@ViewData["Title"]</h1>
</div>


<div class="section-body">

    @await Html.PartialAsync("~/Views/RdDocument/_Content.cshtml")

</div>


<script type="text/javascript">

     $(document).ready(function () {

        RenderRdDocument();

         $('#toggleUpdateRdDocument').change(function() {
            $('#toggleUpdateRdDocument-event').html('Toggle: ' + $(this).prop('checked'))
        })

    });


    
    function RenderRdDocument(){

        var table = $("#tbRdDocumentMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "RdDocument")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "rdDocumentNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "rdDocumentCode",
                    width: "20%"
                },
                {
                    data: "rdDocumentNameTh",
                    width: "20%"
                },
                {
                    data: "rdDocumentNameEn",
                    width: "10%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
                //{
                //    data: null,
                //    className: "dt-center editor-delete text-center text-danger",
                //    defaultContent: '<i class="pointer fas fa-trash"/>',
                //    orderable: false,
                //    width: "2%"
                //}
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditRdDocument(table);
        DeleteRdDocument(table);
    }

    function fnInsertRdDocument(){
        debugger;

        if ($('#txtInsertRdDocumentCode').val() != '' || $('#txtInsertRdDocumentNameTH').val() != '') {
            callRdDocumentInsertController();
        } 
        else {
            validateInsertRdDocument();
        }
        callRdDocumentIndex();
    }

    function fnUpdateRdDocument(){
        if ($('#txtUpdateRdDocumentCode').val() != '' || $('#txtUpdateRdDocumentNameTH').val() != '') {
            callRdDocumentUpdateController();
        } 
        else {
            validateUpdateRdDocument();
        }
        callRdDocumentIndex();
    }

    function EditRdDocument(table){

        $('#tbRdDocumentMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callRdDocumentGetDetailController(getPK);
        });
    }

    function DeleteRdDocument(table){

        $('#tbRdDocumentMain').on('click', 'td.editor-delete', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                buttonsStyling: false,
                }).then(function (result) {
                    if (result) {
                        callRdDocumentDeleteController(getPK);
                        callRdDocumentIndex();
                      }
                    })
        });
    }

    function ExportRdDocument(){

        $.blockUI();

        callRdDocumentExportController();

        $.unblockUI();
    }


    
    // [Begin] Ajax call Controller 

    function callRdDocumentGetDetailController(getPK){
        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "RdDocument")",
            data: { id : getPK },
            //contentType: 'application/json; charset=utf-8',
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)
                document.getElementById('txtUpdateRdDocumentNo').value = data.RdDocumentNo;
                document.getElementById('txtUpdateRdDocumentCode').value = data.RdDocumentCode;
                document.getElementById('txtUpdateRdDocumentNameTH').value = data.RdDocumentNameTh;            
                document.getElementById('txtUpdateRdDocumentNameEN').value = data.RdDocumentNameEn;

                if(data.Isactive == 1){
                    $('#toggleUpdateRdDocument').bootstrapToggle('on');
                }
                else{
                    $('#toggleUpdateRdDocument').bootstrapToggle('off');
                }

                $("#modalUpdateRdDocument").modal('show');
                
            }
        });
    }

    function callRdDocumentInsertController(){

        var IsActive = 1;

        if($('#toggleInsertRdDocument').prop('checked')){
            IsActive = 1;
        }
        else{
            IsActive = 0;
        }

        var model = new Object();

        model.RdDocumentCode = $('#txtInsertRdDocumentCode').val();
        model.RdDocumentNameTh = $('#txtInsertRdDocumentNameTH').val();
        model.RdDocumentNameEn = $('#txtInsertRdDocumentNameEN').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "RdDocument")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                if(resp.OUTPUT_STATUS = true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtInsertRdDocumentCode').value = '';
                    document.getElementById('txtInsertRdDocumentNameTH').value = '';
                    document.getElementById('txtInsertRdDocumentNameEn').value = '';

                    $("#modalCreateRdDocument").modal('hide').on('hidden.bs.modal', functionThatEndsUpDestroyingTheDOM);
                }

            }
        });
    }

    function callRdDocumentUpdateController(){
        
        var IsActive = 1;

        var getToggle = $('#toggleUpdateRdDocument-event').text();

        if(getToggle.includes("true")){
            IsActive = 1;
        }
        else
        {
            IsActive = 0;
        }

        var model = new Object();

        model.RdDocumentNo = $('#txtUpdateRdDocumentNo').val();
        model.RdDocumentCode = $('#txtUpdateRdDocumentCode').val();
        model.RdDocumentNameTh = $('#txtUpdateRdDocumentNameTH').val();
        model.RdDocumentNameEn = $('#txtUpdateRdDocumentNameEN').val();
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "RdDocument")",
            data: { jsonString : getJsonString },
            //contentType: 'application/json; charset=utf-8',
            dataType: "text",
            success: function (resp) {

                if(resp.OUTPUT_STATUS = true){

                    fnSweetAlert_SaveSuccess();

                    document.getElementById('txtUpdateRdDocumentCode').value = '';
                    document.getElementById('txtUpdateRdDocumentNameTH').value = '';
                    document.getElementById('txtUpdateRdDocumentNameEN').value = '';

                    $("#modalUpdateRdDocument").modal('hide').on('hidden.bs.modal', functionThatEndsUpDestroyingTheDOM);
                }
            }
        });
    }

    function callRdDocumentDeleteController(getPK){

        var model = new Object();

        model.RdDocumentNo = getPK;
        model.RdDocumentCode = "";
        model.RdDocumentNameTh = "";
        model.RdDocumentNameEn = "";
        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = 0;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "RdDocument")",
            data: { jsonString : getJsonString },
            //contentType: "application/json; charset=utf-8",
            dataType: "text",
            success: function () {

                    fnSweetAlert_DeleteSuccess();

                    
                }
        });
    }

    function callRdDocumentExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "RdDocument")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-RdDocument.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller 




    function callRdDocumentIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "RdDocument")");
            $.unblockUI();
        }, 500);
    }






</script>