@{
    ViewData["Title"] = "OutputSearchEmailSend Profile";
    Layout = null;
}


@await Html.PartialAsync("~/Views/OutputSearchEmailSend/_Search.cshtml")

<div class="divider">
</div>

@await Html.PartialAsync("~/Views/OutputSearchEmailSend/_Content.cshtml")


<script type="text/javascript">

    $(document).ready(function () {

        $('#OutputSearchEmailSendCustomerCode').select2();
        $('#OutputSearchEmailSendStatus').select2();

        $("#OutputSearchEmailSendDate").flatpickr({
            mode: "range",
            dateFormat: "d-m-Y"
        });

        fnDropdownOutputSearchEmailSendCompanyCode();

        $("#tbOutputSearchEmailSendMain").removeData();

        RenderOutputSearchEmailSend('');

    });


    function fnDropdownOutputSearchEmailSendCompanyCode() {

        $.getJSON("@Url.Action("DropDownList", "ProfileCompany")", function (data) {
            $.each(data, function (i, data) {
                $('<option>',
                    {
                        value: data.companyCode,
                        text: data.companyCode
                    }).html(data.companyCode).appendTo("#OutputSearchEmailSendCustomerCode");
            });
        })
    }

    function fnSearchOutputDataPrinting(){

        $("#tbOutputSearchEmailSendMain").remove();


        var getCompanyCode = $('#OutputSearchEmailSendCustomerCode').val();
        var getDate = $('#OutputSearchEmailSendDate').val();

        var model = new Object();

        model.OutputSearchCompanyCode = getCompanyCode;
        model.OutputSearchDate = getDate;

        var JsonString = JSON.stringify(model);

                //alert(JsonString);

        RenderOutputSearchEmailSend(JsonString);
    }

    function RenderOutputSearchEmailSend(JsonString){

        var table = $("#tbOutputSearchEmailSendMain").DataTable({

            "scrollY": true,
            "scrollX": true,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "searching": true,
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "OutputSearchEmailSend")",
                type: "POST",
                data: { SearchJson : JsonString },
                datatype: "json"
            },


            "columns": [

                {
                    data: "OutputSearchEmailSendNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "OutputSearchEmailSendNo",
                    className: "text-center",
                    width: "5%",
                    visible: false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "OutputSearchEmailSendCompanyCode",
                    width: "10%"
                },
                {
                    data: "OutputSearchEmailSendSubject",
                    width: "20%"
                },
                {
                    data: "OutputSearchEmailSendFileName",
                    width: "10%"
                },
                {
                    data: "OutputSearchEmailSendStatus",
                    width: "10%"
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-warning",
                    defaultContent: '<i class="pointer fas fa-clock"/> </i>',
                    orderable: false,
                    width: "2%"
                }
            ]
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        $('#OutputSearchEmailSendCustomerCode').on( 'change', function () {
            var valueCustomer = $('#OutputSearchEmailSendCustomerCode').val();

            //alert(valueCustomer);

            if(valueCustomer.includes('All')){
                table.columns(2).search('').draw();
            }else{
                    table.column(2).search(this.value).draw();
            }
        } );

        var minDate, maxDate;

        $('#OutputSearchEmailSendDate').on( 'change', function () {
            var valueDate = this.value;

            if(valueDate.includes('to')){
                const myArray = valueDate.split(" to ");


                minDate = myArray[0];
                maxDate = myArray[1];


                var arr=[];

                var getDaysArray = function(minDate, maxDate) {
                    for(dt=new Date(minDate); dt<=new Date(maxDate); dt.setDate(dt.getDate()+1)){

                        let d = dt;

                        let month = (d.getMonth() + 1).toString().padStart(2, '0');
                        let day = d.getDate().toString().padStart(2, '0');
                        let year = d.getFullYear();

                        let dtnew = year+"-"+month+"-"+day;
                        //alert(dtnew)

                        arr.push(dtnew);
                    }
                    return arr;
                };

                var daylist = getDaysArray(new Date(minDate),new Date(maxDate));
                daylist.join("\n")

                //alert(daylist);

                table.columns(6).search(daylist).draw();
            }

        } );



        EditOutputSearchEmailSend(table);
        DeleteOutputSearchEmailSend(table);
    }


    function EditOutputSearchEmailSend(table){

        $('#tbOutputSearchEmailSendMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callOutputSearchEmailSendGetDetailController(getPK);
        });
    }


    function fnTimelineCancelOutputSearchEmailSend(){

        $("#modalUpdateOutputSearchEmailSend").modal('hide');
    } 

    function ExportOutputSearchEmailSend(){

        $.blockUI();

        callOutputSearchEmailSendExportController();

        $.unblockUI();
    }


    // [Begin] Ajax call Controller

    function callOutputSearchEmailSendGetDetailController(getPK){
        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "OutputSearchEmailSend")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                $("#modalUpdateOutputSearchEmailSend").modal('show');

            }
        });
    }


    function callOutputSearchEmailSendExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "OutputSearchEmailSend")",
            //data: { id : getPK },
            contentType: 'application/json; charset=utf-8',
            //dataType: "json",
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-OutputSearchEmailSend.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }

    // [end] Ajax call Controller




    function callOutputSearchEmailSendIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#render-OutputSearchEmailSend-create").load("@Url.Action("Index", "OutputSearchEmailSend")");
            $.unblockUI();
        }, 500);
    }


</script>






