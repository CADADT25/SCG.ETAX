@{
    ViewData["Title"] = " ProfileUserRole ";
    Layout = null;
}

@await Html.PartialAsync("~/Views/ProfileUserRole/_Content.cshtml")



<script type="text/javascript">

     $(document).ready(function () {

        RenderProfileUserRole();

    });



    function RenderProfileUserRole(){

        var table = $("#tbProfileUserRoleMain").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,

            "ajax": {
                url: "@Url.Action("List", "ProfileUserRole")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "profileUserRoleNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "profileUserRoleName",
                    width: "10%"
                },
                {
                    data: "profileUserRoleDescription",
                    width: "30%"
                },
                {
                    data: "isactive",
                    width: "10%",
                    className: "text-center",
                    render: function (data, type, row) {
                        return (data == 1) ? '<i class="text-success fas fa-check"/>' : '<i class="text-danger fas fa-ban"/>';
                    }
                },
                {
                    data: null,
                    className: "dt-center editor-edit text-center text-primary",
                    defaultContent: '<i class="pointer fas fa-pen"/>',
                    orderable: false,
                    width: "2%"
                }
            ]
            
        });

        table.on( 'order.dt search.dt', function () {
            table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
                cell.innerHTML = i+1;
            } );
        } ).draw();


        EditProfileUserRole(table);
        DeleteProfileUserRole(table);
    }

    function RenderProfileUserRoleMenuConfiguraion(){

        var table = $("#tbUserRoleConfigControlMenu").DataTable({

            "scrollY": false,
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 50,

            "ajax": {
                url: "@Url.Action("List", "ConfigControlMenu")",
                type: "POST",
                datatype: "json"
            },


            "columns": [

                {
                    data: "configControlMenuNo",
                    className: "text-center",
                    width: "5%",
                    visible: false
                },
                {
                    //data: "productUnitNo",
                    className: "text-center",
                    width: "5%",
                    visible: false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "configControlMenuName",
                    width: "40%"
                },
                {
                    className: "text-center",
                    data: "configControlMenuValue",
                    width: "10%"
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                },
                {
                    render: function (data, type, full, meta){
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';}
                }

            ]
        });
    }

    function fnInsertCancelProfileUserRole(){

        document.getElementById('txtInsertUserRoleName').value = '';
        document.getElementById('txtInsertUserRoleDescription').value = '';

        $("#modalCreateProfileUserRole").modal('hide');
    }

    function fnUpdateCancelProfileUserRole(){

        document.getElementById('txtUpdateUserRoleName').value = '';
        document.getElementById('txtUpdateUserRoleDescription').value = '';

        $("#modalUpdateProfileUserRole").modal('hide');
    }

    function callModalInsertProfileUserRole(){

        RenderProfileUserRoleMenuConfiguraion();

        document.getElementById('txtInsertUserRoleName').value = '';
        document.getElementById('txtInsertUserRoleDescription').value = '';

        $("#modalCreateProfileUserRole").modal('show');
        
    }

    function fnInsertProfileUserRole(){

        if ( $('#txtInsertUserRoleName').val() != '' )
        {
            callProfileUserRoleInsertController();
        }
        else {
            fnToastrInputDataFail();
            validateInsertProfileUserRole();
        }

    }

    function fnUpdateProfileUserRole(){

         if ( $('#txtUpdateUserRoleName').val() != '' )
             
        {
            callProfileUserRoleUpdateController();
        }
        else {
            fnToastrInputDataFail();
            validateUpdateProfileUserRole();
        }
    }

    function EditProfileUserRole(table){

        $('#tbProfileUserRoleMain').on('click', 'td.editor-edit', function () {

            var data = table.row($(this).closest('tr')).data();

            var getPK = data[Object.keys(data)[0]];

            callProfileUserRoleGetDetailController(getPK);

        });
    }

    function ExportProfileUserRole(){

        $.blockUI();

        callProfileUserRoleExportController();

        $.unblockUI();
    }


    function callProfileUserRoleGetDetailController(getPK){

        $.ajax({
            type: "GET",
            url: "@Url.Action("Detail", "ProfileUserRole")",
            data: { id : getPK },
            dataType: "json",
            success: function (result) {

                data = $.parseJSON(result)

                document.getElementById('txtUpdateUserRoleNo').value = data.ProfileUserRoleNo;
                document.getElementById('txtUpdateUserRoleName').value = data.ProfileUserRoleName;
                document.getElementById('txtUpdateUserRoleDescription').value = data.ProfileUserRoleDescription;

                if(data.Isactive == 1){
                    document.getElementById("toggleUpdateProfileUserRole").checked = true;
                }
                else{
                    document.getElementById("toggleUpdateProfileUserRole").checked = false;
                }

                $("#modalUpdateProfileUserRole").modal('show');
            }
        });
    }

    function callProfileUserRoleInsertController(){

        var IsActive = ($('#toggleInsertProfileUserRole').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.ProfileUserRoleName = $('#txtInsertUserRoleName').val();
        model.ProfileUserRoleDescription = $('#txtInsertUserRoleDescription').val();


        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Insert", "ProfileUserRole")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp);

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalCreateProfileUserRole").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileUserRoleIndex();
                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }

            }
        });
    }

    function callProfileUserRoleUpdateController(){        

        var IsActive = ($('#toggleUpdateProfileUserRole').prop('checked')) ? 1 : 0 ;

        var model = new Object();

        model.ProfileUserRoleNo = $('#txtUpdateUserRoleNo').val();
        model.ProfileUserRoleName = $('#txtUpdateUserRoleName').val();
        model.ProfileUserRoleDescription = $('#txtUpdateUserRoleDescription').val();

        model.CreateBy = $("#leftSideEmail").text();
        model.CreateDate = new Date();
        model.UpdateBy = $("#leftSideEmail").text();
        model.UpdateDate = new Date();
        model.Isactive = IsActive;

        var getJsonString = JSON.stringify(model);

        $.ajax({
            type: "POST",
            url: "@Url.Action("Update", "ProfileUserRole")",
            data: { jsonString : getJsonString },
            dataType: "text",
            success: function (resp) {

                data = $.parseJSON(resp)

                var errorMessage = data.erroR_MESSAGE;

                if(data.status == true){

                    $("#modalUpdateProfileUserRole").modal('hide');

                    fnSweetAlert_SaveSuccess();

                    callProfileUserRoleIndex();

                }
                else{
                    fnSweetAlert_Error(errorMessage);
                }
            }
        });
    }


    function callProfileUserRoleExportController(){
        $.ajax({
            type: "GET",
            url: "@Url.Action("ExportToCsv", "ProfileUserRole")",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {

                var blob = new Blob([response], {type: 'text/csv;charset=utf-8;'});

                var downloadUrl = URL.createObjectURL(blob);

                var a = document.createElement("a");

                a.href = downloadUrl;

                a.download = "scg-etax-ProfileUserRole.csv";

                document.body.appendChild(a);

                a.click();
            }
        });
    }


    function callProfileUserRoleIndex() {
        setTimeout(function(){
            $.blockUI();
            $("#contentPartial").load("@Url.Action("Index", "ProfileUserRole")");
            $.unblockUI();
        }, 500);
    }

</script>